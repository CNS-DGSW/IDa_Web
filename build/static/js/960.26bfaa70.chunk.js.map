{"version":3,"file":"static/js/960.26bfaa70.chunk.js","mappings":"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","sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","util/enums/ListPassedCategory.ts","components/Admin/UserListPassed/UserListPassed.tsx","containers/Admin/UserListPassed/UserListPassedContainer.tsx","pages/AdminPage/UserListPassed.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/detailScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 점수 관리 <br></br>(직무적성, 학업 및 진로역량, 컴퓨팅)\r\n            </span>\r\n          </NavLink>\r\n          {/*<NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 면접 점수\r\n              <br />\r\n              (창의협업, 구술면접)\r\n            </span>\r\n  </NavLink>*/}\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","enum ListPassedCategory {\r\n  First = \"First\",\r\n  Final = \"Final\",\r\n}\r\n\r\nexport default ListPassedCategory;\r\n","import React from \"react\";\r\nimport { ListPassed } from \"util/types/UserList\";\r\nimport \"./UserListPassed.scss\";\r\nimport ListPassedCategory from \"util/enums/ListPassedCategory\";\r\nimport moment from \"moment\";\r\nimport applyDetailModel from \"models/ApplyDetailModel\";\r\n\r\ninterface UserListPassedProps {\r\n  tryDownExcel: (key: string) => void;\r\n  passedStatus: ListPassed[];\r\n  selectListPassed: (index: string) => void;\r\n  listPassed: ListPassedCategory;\r\n  firstData: boolean;\r\n  secondData: boolean;\r\n  tryChangeFirstStudent: () => void;\r\n  tryChangeSecondStudent: () => void;\r\n}\r\n\r\nconst UserListPassed = ({\r\n  tryDownExcel,\r\n  passedStatus,\r\n  selectListPassed,\r\n  listPassed,\r\n  firstData,\r\n  secondData,\r\n  tryChangeFirstStudent,\r\n  tryChangeSecondStudent,\r\n}: UserListPassedProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"listPassed\">\r\n        <span className=\"listPassed-title\">1차 / 최종 합격 여부</span>\r\n        <div className=\"listPassed-firstBtn\">\r\n          <button onClick={() => tryDownExcel(\"first\")} className=\"header-btn\">\r\n            1차 합격 엑셀\r\n          </button>\r\n          {firstData ? (\r\n            <>\r\n              <button\r\n                className=\"header-btn true\"\r\n                onClick={() => tryChangeFirstStudent()}\r\n              >\r\n                1차 합격 확인가능\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"header-btn false\"\r\n                onClick={() => tryChangeFirstStudent()}\r\n              >\r\n                1차 합격 확인 불가능\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"listPassed-finalBtn\">\r\n          <button onClick={() => tryDownExcel(\"final\")} className=\"header-btn\">\r\n            최종 합격 엑셀\r\n          </button>\r\n          {secondData ? (\r\n            <>\r\n              <button\r\n                className=\"header-btn true\"\r\n                onClick={() => {\r\n                  tryChangeSecondStudent();\r\n                }}\r\n              >\r\n                최종 합격 확인가능\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"header-btn false\"\r\n                onClick={() => {\r\n                  tryChangeSecondStudent();\r\n                }}\r\n              >\r\n                최종 합격 확인 불가능\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <select\r\n          className=\"listPassed-select\"\r\n          onChange={(e) => {\r\n            selectListPassed(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"0\">1차 합격</option>\r\n          <option value=\"1\" className=\"listPassed-select-op\">\r\n            최종 합격\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div className=\"passed\">\r\n        <table className=\"passed-list\">\r\n          <thead>\r\n            <tr className=\"passed-list-title\">\r\n              {listPassed === ListPassedCategory.Final && (\r\n                <>\r\n                  <th>순번</th>\r\n                  <th>이름</th>\r\n                  <th>출신학교</th>\r\n                  <th>지역</th>\r\n                  <th>전화번호</th>\r\n                  <th>이메일</th>\r\n                  <th>생년월일</th>\r\n                  <th>접수번호</th>\r\n                  <th>수험번호</th>\r\n                  <th>1차 합격전형</th>\r\n                  <th>합격전형</th>\r\n                </>\r\n              )}\r\n              {listPassed === ListPassedCategory.First && (\r\n                <>\r\n                  <th>순번</th>\r\n                  <th>이름</th>\r\n                  <th>출신학교</th>\r\n                  <th>지역</th>\r\n                  <th>전화번호</th>\r\n                  <th>이메일</th>\r\n                  <th>생년월일</th>\r\n                  <th>접수번호</th>\r\n                  <th>수험번호</th>\r\n                  <th>지원전형</th>\r\n                  <th>합격전형</th>\r\n                </>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {passedStatus.map((i, idx) => {\r\n              return (\r\n                <tr key={idx}>\r\n                  {listPassed === ListPassedCategory.Final && (\r\n                    <>\r\n                      <td>{idx + 1}</td>\r\n                      <td>\r\n                        <a target=\"_blank\" href={`/write?userIdx=${i.idx}`}>\r\n                          {i.name}\r\n                        </a>\r\n                      </td>\r\n                      <td>{i.schoolName}</td>\r\n                      <td>{i.cityName}</td>\r\n                      <td>{i.studentTel}</td>\r\n                      <td>{i.email}</td>\r\n                      <td>{moment(i.birth).format(\"YYYY-MM-DD\")}</td>\r\n                      <td>{i.submitCode}</td>\r\n                      <td>{i.examCode}</td>\r\n                      <td>{i.firstApplyType}</td>\r\n                      <td>{i.finalApplyType}</td>\r\n                    </>\r\n                  )}\r\n                  {listPassed === ListPassedCategory.First && (\r\n                    <>\r\n                      <td>{idx + 1}</td>\r\n                      <td>\r\n                        <a target=\"_blank\" href={`/write?userIdx=${i.idx}`}>\r\n                          {i.name}\r\n                        </a>\r\n                      </td>\r\n                      <td>{i.schoolName}</td>\r\n                      <td>{i.cityName}</td>\r\n                      <td>{i.studentTel}</td>\r\n                      <td>{i.email}</td>\r\n                      <td>{moment(i.birth).format(\"YYYY-MM-DD\")}</td>\r\n                      <td>{i.submitCode}</td>\r\n                      <td>{i.examCode}</td>\r\n                      <td>{i.applyType}</td>\r\n                      <td>{i.firstApplyType}</td>\r\n                    </>\r\n                  )}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListPassed;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport UserListPassed from \"components/Admin/UserListPassed\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListPassed } from \"util/types/UserList\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\nimport ExcelApi from \"assets/api/ExcelApi\";\r\nimport ListPassedCategory from \"util/enums/ListPassedCategory\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UserListPassedContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const history = useHistory();\r\n  const {\r\n    getUserListPassed,\r\n    getViewFirstStudent,\r\n    adminChangeFirstStudent,\r\n    getViewSecondStudent,\r\n    adminChangeSecondStudent,\r\n  } = store.AdminStore;\r\n\r\n  const { GetFirstSelection, GetSecondSelection } = ExcelApi;\r\n  const [listPassed, setListPassed] = useState<ListPassedCategory>(\r\n    ListPassedCategory.First\r\n  );\r\n  const [firstData, setFirstData] = useState<boolean>(false);\r\n  const [secondData, setSecondData] = useState<boolean>(false);\r\n\r\n  const [passedStatus, setPassedStatus] = useState<ListPassed[]>([]);\r\n\r\n  // 지원자 합격 여부 받아오기\r\n  const tryGetUserListPassed = useCallback(() => {\r\n    getUserListPassed(\r\n      listPassed === ListPassedCategory.Final ? true : undefined\r\n    )\r\n      .then((res) => {\r\n        setPassedStatus(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, [listPassed]);\r\n\r\n  // 1차 합격자 또는 2차 합격자 엑셀 다운\r\n  const tryDownExcel = (key: string) => {\r\n    switch (key) {\r\n      case \"first\":\r\n        GetFirstSelection().catch((err) => {\r\n          toast.error(\"오류가 발생하였습니다.\");\r\n        });\r\n        break;\r\n\r\n      case \"final\":\r\n        GetSecondSelection().catch((err) => {\r\n          toast.error(\"오류가 발생하였습니다.\");\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  // 1차 또는 최종 카테고리 선택\r\n  const selectListPassed = useCallback(\r\n    (index: string) => {\r\n      if (index === \"0\") {\r\n        setListPassed(ListPassedCategory.First);\r\n      } else {\r\n        setListPassed(ListPassedCategory.Final);\r\n      }\r\n    },\r\n    [listPassed]\r\n  );\r\n\r\n  const tryViewFirstStudent = useCallback(() => {\r\n    getViewFirstStudent().then((res) => {\r\n      setFirstData(res.data);\r\n    });\r\n  }, [getViewFirstStudent, setFirstData]);\r\n\r\n  const tryChangeFirstStudent = useCallback(() => {\r\n    adminChangeFirstStudent().then((res) => {\r\n      tryViewFirstStudent();\r\n      console.log(res);\r\n    });\r\n  }, [adminChangeFirstStudent, tryViewFirstStudent]);\r\n\r\n  const tryViewSecondStudent = useCallback(() => {\r\n    getViewSecondStudent().then((res) => {\r\n      setSecondData(res.data);\r\n    });\r\n  }, [getViewSecondStudent, setSecondData]);\r\n\r\n  const tryChangeSecondStudent = useCallback(() => {\r\n    adminChangeSecondStudent().then((res) => {\r\n      tryViewSecondStudent();\r\n      console.log(res);\r\n    });\r\n  }, [adminChangeSecondStudent, tryViewSecondStudent]);\r\n\r\n  useEffect(() => {\r\n    tryGetUserListPassed();\r\n  }, [tryGetUserListPassed]);\r\n\r\n  useEffect(() => {\r\n    tryViewFirstStudent();\r\n  }, [tryViewFirstStudent]);\r\n\r\n  useEffect(() => {\r\n    tryViewSecondStudent();\r\n  }, [tryChangeSecondStudent]);\r\n  return (\r\n    <>\r\n      <UserListPassed\r\n        tryDownExcel={tryDownExcel}\r\n        passedStatus={passedStatus}\r\n        selectListPassed={selectListPassed}\r\n        listPassed={listPassed}\r\n        firstData={firstData}\r\n        secondData={secondData}\r\n        tryChangeFirstStudent={tryChangeFirstStudent}\r\n        tryChangeSecondStudent={tryChangeSecondStudent}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(UserListPassedContainer);\r\n","import React from \"react\";\r\nimport UserListPassedContainer from \"containers/Admin/UserListPassed/UserListPassedContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst UserRatePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <UserListPassedContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default UserRatePage;\r\n"],"names":["_ref","children","_jsxs","_Fragment","_jsx","HeaderContainer","theme","className","NavLink","to","activeClassName","style","textAlign","display","exact","ListPassedCategory","tryDownExcel","passedStatus","selectListPassed","listPassed","firstData","secondData","tryChangeFirstStudent","tryChangeSecondStudent","onClick","onChange","e","target","value","Final","First","map","i","idx","href","concat","name","schoolName","cityName","studentTel","email","moment","birth","format","submitCode","examCode","firstApplyType","finalApplyType","applyType","observer","_objectDestructuringEmpty","store","useStore","history","useHistory","_store$AdminStore","AdminStore","getUserListPassed","getViewFirstStudent","adminChangeFirstStudent","getViewSecondStudent","adminChangeSecondStudent","GetFirstSelection","ExcelApi","GetSecondSelection","_useState","useState","_useState2","_slicedToArray","setListPassed","_useState3","_useState4","setFirstData","_useState5","_useState6","setSecondData","_useState7","_useState8","setPassedStatus","tryGetUserListPassed","useCallback","undefined","then","res","data","catch","err","handleAdmin","index","tryViewFirstStudent","console","log","tryViewSecondStudent","useEffect","UserListPassed","key","toast","error","DefaultAdminHeader","UserListPassedContainer"],"sourceRoot":""}