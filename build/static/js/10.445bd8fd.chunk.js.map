{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","components/Admin/UserResult/UserResult.tsx","containers/Admin/UserResult/UserResultContainer.tsx","pages/AdminPage/UserResultPage.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","exact","UserResult","userResultList","tryChangeFirstResultStatus","tryChangeSecondResultStatus","onChangeFirstApply","onChangeSecondApply","onClickSetFirstSelection","onClickSetSecondSelection","onClick","map","userResult","idx","key","target","href","name","email","firstApplyTypeString","onChange","e","value","ApplyType","COMMON","ApplyDetailType","applyDetailModel","special","apply","i","undefined","models","applyName","model","k","SPECIAL","other","OTHER","isPassedFirstApply","finalApplyTypeString","isPassedSecondApply","observer","history","useHistory","useStore","store","AdminStore","getUserResultList","changeFirstApplyStatus","changeSecondApplyStatus","changeSecondResultStatus","changeFirstResultStatus","setFirstSelection","setSecondSelection","useState","setUserResultList","tryGetUserResultList","useCallback","then","res","console","log","data","catch","err","handleAdmin","useEffect","userId","status","split","applyDetail","userIdx","UserRatePage","UserResultContainer"],"mappings":"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","file":"static/js/10.445bd8fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 면접 점수</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","import React from \"react\";\r\nimport \"./UserResult.scss\";\r\nimport ApplyType from \"util/enums/Apply\";\r\nimport ApplyDetailType from \"util/enums/ApplyDetail\";\r\nimport { findNameByValue } from \"models/ApplyDetailModel\";\r\nimport { findApplyByString } from \"util/enums/Apply\";\r\nimport { UserResult as UserResultType } from \"util/types/UserResult\";\r\nimport applyDetailModel from \"models/ApplyDetailModel\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface UserResultProps {\r\n  userResultList: UserResultType[];\r\n  tryChangeFirstResultStatus: (userIdx: number) => void;\r\n  tryChangeSecondResultStatus: (userIdx: number) => void;\r\n  onChangeFirstApply: (userId: number, status: string) => void;\r\n  onChangeSecondApply: (userId: number, status: string) => void;\r\n  onClickSetFirstSelection: () => void;\r\n  onClickSetSecondSelection: () => void;\r\n}\r\n\r\nconst UserResult = ({\r\n  userResultList,\r\n  tryChangeFirstResultStatus,\r\n  tryChangeSecondResultStatus,\r\n  onChangeFirstApply,\r\n  onChangeSecondApply,\r\n  onClickSetFirstSelection,\r\n  onClickSetSecondSelection,\r\n}: UserResultProps) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={onClickSetFirstSelection} className=\"_button false\">\r\n          1차 합격 산출\r\n        </button>\r\n        {\"    \"}\r\n        <button onClick={onClickSetSecondSelection} className=\"_button false\">\r\n          2차 합격 산출\r\n        </button>\r\n      </div>\r\n      <table className=\"table-list\">\r\n        <thead>\r\n          <tr className=\"table-list-title\">\r\n            <th>순번</th>\r\n            <th>이름</th>\r\n            <th>아이디</th>\r\n            <th>1차 전형</th>\r\n            <th>1차 합격</th>\r\n            <th>2차 전형</th>\r\n            <th>2차 합격</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userResultList.map((userResult, idx) => (\r\n            <tr key={idx}>\r\n              <td>\r\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\r\n                  {idx + 1}\r\n                  {/* 보이는 id와 실제 이동되는 쿼리의 값이 다름 */}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\r\n                  {userResult.name}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\r\n                  {userResult.email}\r\n                </a>\r\n              </td>\r\n\r\n              {/* 1차 전형 */}\r\n              <td>\r\n                <b>{userResult.firstApplyTypeString}</b>\r\n                <br />\r\n                <select\r\n                  onChange={(e) => {\r\n                    onChangeFirstApply(userResult.idx, e.target.value);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    -\r\n                  </option>\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    일반 전형 - 일반 전형\r\n                  </option>\r\n                  {applyDetailModel.special.map((apply, i) => {\r\n                    if (apply.models !== undefined) {\r\n                      const applyName = apply.name;\r\n                      return apply.models.map((model, k) => (\r\n                        <option\r\n                          key={k}\r\n                          value={ApplyType.SPECIAL + \"-\" + model.value}\r\n                        >\r\n                          특별 전형 - {applyName} - {model.name}\r\n                        </option>\r\n                      ));\r\n                    }\r\n                    return (\r\n                      <option\r\n                        key={i}\r\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\r\n                      >\r\n                        특별 전형 - {apply.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  {applyDetailModel.other.models.map((apply) => (\r\n                    <option value={ApplyType.OTHER + \"-\" + apply.value}>\r\n                      특례 입학 - {apply.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                {userResult.isPassedFirstApply ? (\r\n                  <button\r\n                    className=\"_button true pointer\"\r\n                    onClick={() => tryChangeFirstResultStatus(userResult.idx)}\r\n                  >\r\n                    합격\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"_button false pointer\"\r\n                    onClick={() => tryChangeFirstResultStatus(userResult.idx)}\r\n                  >\r\n                    불합격\r\n                  </button>\r\n                )}\r\n              </td>\r\n              {/* 2차 전형 */}\r\n              <td>\r\n                {\" \"}\r\n                <b>{userResult.finalApplyTypeString}</b>\r\n                <br />\r\n                <select\r\n                  onChange={(e) => {\r\n                    onChangeSecondApply(userResult.idx, e.target.value);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    -\r\n                  </option>\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    일반 전형 - 일반 전형\r\n                  </option>\r\n                  {applyDetailModel.special.map((apply, i) => {\r\n                    if (apply.models !== undefined) {\r\n                      const applyName = apply.name;\r\n                      return apply.models.map((model, k) => (\r\n                        <option\r\n                          key={k}\r\n                          value={ApplyType.SPECIAL + \"-\" + model.value}\r\n                        >\r\n                          특별 전형 - {applyName} - {model.name}\r\n                        </option>\r\n                      ));\r\n                    }\r\n                    return (\r\n                      <option\r\n                        key={i}\r\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\r\n                      >\r\n                        특별 전형 - {apply.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  {applyDetailModel.other.models.map((apply) => (\r\n                    <option value={ApplyType.OTHER + \"-\" + apply.value}>\r\n                      특례 입학 - {apply.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                {userResult.isPassedSecondApply ? (\r\n                  <button\r\n                    className=\"_button true pointer\"\r\n                    onClick={() => tryChangeSecondResultStatus(userResult.idx)}\r\n                  >\r\n                    합격\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"_button false pointer\"\r\n                    onClick={() => tryChangeSecondResultStatus(userResult.idx)}\r\n                  >\r\n                    불합격\r\n                  </button>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserResult;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport UserResult from \"components/Admin/UserResult\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\nimport Apply from \"util/enums/Apply\";\r\nimport ApplyDetail from \"util/enums/ApplyDetail\";\r\nimport { UserResult as UserResultType } from \"util/types/UserResult\";\r\nimport { observer } from \"mobx-react\";\r\nimport { findNameByValue } from \"models/ApplyDetailModel\";\r\n\r\nconst UserRateContainer = ({}) => {\r\n  const history = useHistory();\r\n\r\n  const { store } = useStore();\r\n  const {\r\n    getUserResultList,\r\n    changeFirstApplyStatus,\r\n    changeSecondApplyStatus,\r\n    changeSecondResultStatus,\r\n    changeFirstResultStatus,\r\n    setFirstSelection,\r\n    setSecondSelection,\r\n  } = store.AdminStore;\r\n\r\n  const [userResultList, setUserResultList] = useState<UserResultType[]>([]);\r\n\r\n  // 지원자 현황 받아오기\r\n  const tryGetUserResultList = useCallback(() => {\r\n    getUserResultList()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUserResultList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    tryGetUserResultList();\r\n  }, [tryGetUserResultList]);\r\n\r\n  const onChangeFirstApply = useCallback((userId, status) => {\r\n    const apply = status.split(\"-\")[0];\r\n    const applyDetail = status.split(\"-\")[1];\r\n\r\n    changeFirstApplyStatus(userId, apply, applyDetail).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const onChangeSecondApply = useCallback((userId, status) => {\r\n    const apply = status.split(\"-\")[0];\r\n    const applyDetail = status.split(\"-\")[1];\r\n\r\n    changeSecondApplyStatus(userId, apply, applyDetail).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const tryChangeFirstResultStatus = useCallback((userIdx: number) => {\r\n    changeFirstResultStatus(userIdx).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const tryChangeSecondResultStatus = useCallback((userIdx: number) => {\r\n    changeSecondResultStatus(userIdx).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const onClickSetFirstSelection = useCallback(() => {\r\n    setFirstSelection().then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const onClickSetSecondSelection = useCallback(() => {\r\n    setSecondSelection().then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <UserResult\r\n      userResultList={userResultList}\r\n      onChangeFirstApply={onChangeFirstApply}\r\n      onChangeSecondApply={onChangeSecondApply}\r\n      tryChangeFirstResultStatus={tryChangeFirstResultStatus}\r\n      tryChangeSecondResultStatus={tryChangeSecondResultStatus}\r\n      onClickSetFirstSelection={onClickSetFirstSelection}\r\n      onClickSetSecondSelection={onClickSetSecondSelection}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(UserRateContainer);\r\n","import React from \"react\";\r\nimport UserResultContainer from \"containers/Admin/UserResult/UserResultContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst UserRatePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <UserResultContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default UserRatePage;\r\n"],"sourceRoot":""}