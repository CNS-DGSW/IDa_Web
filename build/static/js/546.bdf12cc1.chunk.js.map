{"version":3,"file":"static/js/546.bdf12cc1.chunk.js","mappings":"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","sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","components/Admin/UserResult/UserResult.tsx","containers/Admin/UserResult/UserResultContainer.tsx","pages/AdminPage/UserResultPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/detailScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 점수 관리 <br></br>(직무적성, 학업 및 진로역량, 컴퓨팅)\r\n            </span>\r\n          </NavLink>\r\n          {/*<NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 면접 점수\r\n              <br />\r\n              (창의협업, 구술면접)\r\n            </span>\r\n  </NavLink>*/}\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","import React from \"react\";\r\nimport \"./UserResult.scss\";\r\nimport ApplyType from \"util/enums/Apply\";\r\nimport ApplyDetailType from \"util/enums/ApplyDetail\";\r\nimport { findNameByValue } from \"models/ApplyDetailModel\";\r\nimport { findApplyByString } from \"util/enums/Apply\";\r\nimport { UserResult as UserResultType } from \"util/types/UserResult\";\r\nimport applyDetailModel from \"models/ApplyDetailModel\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface UserResultProps {\r\n  userResultList: UserResultType[];\r\n  tryChangeFirstResultStatus: (userIdx: number) => void;\r\n  tryChangeSecondResultStatus: (userIdx: number) => void;\r\n  onChangeFirstApply: (userId: number, status: string) => void;\r\n  onChangeSecondApply: (userId: number, status: string) => void;\r\n  onClickSetFirstSelection: () => void;\r\n  onClickSetSecondSelection: () => void;\r\n}\r\n\r\nconst UserResult = ({\r\n  userResultList,\r\n  tryChangeFirstResultStatus,\r\n  tryChangeSecondResultStatus,\r\n  onChangeFirstApply,\r\n  onChangeSecondApply,\r\n  onClickSetFirstSelection,\r\n  onClickSetSecondSelection,\r\n}: UserResultProps) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={onClickSetFirstSelection} className=\"_button false\">\r\n          1차 합격 산출\r\n        </button>\r\n        {\"    \"}\r\n        <button onClick={onClickSetSecondSelection} className=\"_button false\">\r\n          2차 합격 산출\r\n        </button>\r\n      </div>\r\n      <table className=\"table-list\">\r\n        <thead>\r\n          <tr className=\"table-list-title\">\r\n            <th>수험 번호</th>\r\n            <th>이름</th>\r\n            <th>아이디</th>\r\n            <th>1차 전형</th>\r\n            <th>1차 합격</th>\r\n            <th>2차 전형</th>\r\n            <th>2차 합격</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {userResultList.map((userResult, idx) => (\r\n            <tr key={idx}>\r\n              <td>\r\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\r\n                  {userResult.examCode}\r\n                  {/* 보이는 id와 실제 이동되는 쿼리의 값이 다름 */}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\r\n                  {userResult.name}\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\r\n                  {userResult.email}\r\n                </a>\r\n              </td>\r\n\r\n              {/* 1차 전형 */}\r\n              <td>\r\n                <b>{userResult.firstApplyTypeString}</b>\r\n                <br />\r\n                <select\r\n                  onChange={(e) => {\r\n                    onChangeFirstApply(userResult.idx, e.target.value);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    -\r\n                  </option>\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    일반 전형 - 일반 전형\r\n                  </option>\r\n                  {applyDetailModel.special.map((apply, i) => {\r\n                    if (apply.models !== undefined) {\r\n                      const applyName = apply.name;\r\n                      return apply.models.map((model, k) => (\r\n                        <option\r\n                          key={k}\r\n                          value={ApplyType.SPECIAL + \"-\" + model.value}\r\n                        >\r\n                          특별 전형 - {applyName} - {model.name}\r\n                        </option>\r\n                      ));\r\n                    }\r\n                    return (\r\n                      <option\r\n                        key={i}\r\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\r\n                      >\r\n                        특별 전형 - {apply.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  {applyDetailModel.other.models.map((apply) => (\r\n                    <option value={ApplyType.OTHER + \"-\" + apply.value}>\r\n                      특례 입학 - {apply.name}\r\n                    </option>\r\n                  ))}\r\n                  {applyDetailModel.national.models.map((apply, i) => {\r\n                    return (\r\n                      <option\r\n                        key={i}\r\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\r\n                      >\r\n                        {applyDetailModel.national.name} - {apply.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                {userResult.isPassedFirstApply ? (\r\n                  <button\r\n                    className=\"_button true pointer\"\r\n                    onClick={() => tryChangeFirstResultStatus(userResult.idx)}\r\n                  >\r\n                    합격\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"_button false pointer\"\r\n                    onClick={() => tryChangeFirstResultStatus(userResult.idx)}\r\n                  >\r\n                    불합격\r\n                  </button>\r\n                )}\r\n              </td>\r\n              {/* 2차 전형 */}\r\n              <td>\r\n                {\" \"}\r\n                <b>{userResult.finalApplyTypeString}</b>\r\n                <br />\r\n                <select\r\n                  onChange={(e) => {\r\n                    onChangeSecondApply(userResult.idx, e.target.value);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    -\r\n                  </option>\r\n                  <option\r\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\r\n                  >\r\n                    일반 전형 - 일반 전형\r\n                  </option>\r\n                  {applyDetailModel.special.map((apply, i) => {\r\n                    if (apply.models !== undefined) {\r\n                      const applyName = apply.name;\r\n                      return apply.models.map((model, k) => (\r\n                        <option\r\n                          key={k}\r\n                          value={ApplyType.SPECIAL + \"-\" + model.value}\r\n                        >\r\n                          특별 전형 - {applyName} - {model.name}\r\n                        </option>\r\n                      ));\r\n                    }\r\n                    return (\r\n                      <option\r\n                        key={i}\r\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\r\n                      >\r\n                        특별 전형 - {apply.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  {applyDetailModel.other.models.map((apply) => (\r\n                    <option value={ApplyType.OTHER + \"-\" + apply.value}>\r\n                      특례 입학 - {apply.name}\r\n                    </option>\r\n                  ))}\r\n                  {applyDetailModel.national.models.map((apply, i) => {\r\n                    return (\r\n                      <option\r\n                        key={i}\r\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\r\n                      >\r\n                        {applyDetailModel.national.name} - {apply.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                {userResult.isPassedSecondApply ? (\r\n                  <button\r\n                    className=\"_button true pointer\"\r\n                    onClick={() => tryChangeSecondResultStatus(userResult.idx)}\r\n                  >\r\n                    합격\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"_button false pointer\"\r\n                    onClick={() => tryChangeSecondResultStatus(userResult.idx)}\r\n                  >\r\n                    불합격\r\n                  </button>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserResult;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport UserResult from \"components/Admin/UserResult\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\nimport Apply from \"util/enums/Apply\";\r\nimport ApplyDetail from \"util/enums/ApplyDetail\";\r\nimport { UserResult as UserResultType } from \"util/types/UserResult\";\r\nimport { observer } from \"mobx-react\";\r\nimport { findNameByValue } from \"models/ApplyDetailModel\";\r\n\r\nconst UserRateContainer = ({}) => {\r\n  const history = useHistory();\r\n\r\n  const { store } = useStore();\r\n  const {\r\n    getUserResultList,\r\n    changeFirstApplyStatus,\r\n    changeSecondApplyStatus,\r\n    changeSecondResultStatus,\r\n    changeFirstResultStatus,\r\n    setFirstSelection,\r\n    setSecondSelection,\r\n  } = store.AdminStore;\r\n\r\n  const [userResultList, setUserResultList] = useState<UserResultType[]>([]);\r\n\r\n  // 지원자 현황 받아오기\r\n  const tryGetUserResultList = useCallback(() => {\r\n    getUserResultList()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setUserResultList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    tryGetUserResultList();\r\n  }, [tryGetUserResultList]);\r\n\r\n  const onChangeFirstApply = useCallback((userId, status) => {\r\n    const apply = status.split(\"-\")[0];\r\n    const applyDetail = status.split(\"-\")[1];\r\n\r\n    changeFirstApplyStatus(userId, apply, applyDetail).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const onChangeSecondApply = useCallback((userId, status) => {\r\n    const apply = status.split(\"-\")[0];\r\n    const applyDetail = status.split(\"-\")[1];\r\n\r\n    changeSecondApplyStatus(userId, apply, applyDetail).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const tryChangeFirstResultStatus = useCallback((userIdx: number) => {\r\n    changeFirstResultStatus(userIdx).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const tryChangeSecondResultStatus = useCallback((userIdx: number) => {\r\n    changeSecondResultStatus(userIdx).then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const onClickSetFirstSelection = useCallback(() => {\r\n    setFirstSelection().then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  const onClickSetSecondSelection = useCallback(() => {\r\n    setSecondSelection().then(() => {\r\n      tryGetUserResultList();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <UserResult\r\n      userResultList={userResultList}\r\n      onChangeFirstApply={onChangeFirstApply}\r\n      onChangeSecondApply={onChangeSecondApply}\r\n      tryChangeFirstResultStatus={tryChangeFirstResultStatus}\r\n      tryChangeSecondResultStatus={tryChangeSecondResultStatus}\r\n      onClickSetFirstSelection={onClickSetFirstSelection}\r\n      onClickSetSecondSelection={onClickSetSecondSelection}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(UserRateContainer);\r\n","import React from \"react\";\r\nimport UserResultContainer from \"containers/Admin/UserResult/UserResultContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst UserRatePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <UserResultContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default UserRatePage;\r\n"],"names":["_ref","children","_jsxs","_Fragment","_jsx","HeaderContainer","theme","className","NavLink","to","activeClassName","style","textAlign","display","exact","userResultList","tryChangeFirstResultStatus","tryChangeSecondResultStatus","onChangeFirstApply","onChangeSecondApply","onClickSetFirstSelection","onClickSetSecondSelection","onClick","map","userResult","idx","target","href","concat","examCode","name","email","firstApplyTypeString","onChange","e","value","ApplyType","COMMON","ApplyDetailType","applyDetailModel","special","apply","i","undefined","models","applyName","model","k","SPECIAL","other","OTHER","national","isPassedFirstApply","finalApplyTypeString","isPassedSecondApply","observer","_objectDestructuringEmpty","history","useHistory","_store$AdminStore","useStore","store","AdminStore","getUserResultList","changeFirstApplyStatus","changeSecondApplyStatus","changeSecondResultStatus","changeFirstResultStatus","setFirstSelection","setSecondSelection","_useState","useState","_useState2","_slicedToArray","setUserResultList","tryGetUserResultList","useCallback","then","res","console","log","data","catch","err","handleAdmin","useEffect","userId","status","split","applyDetail","userIdx","UserResult","DefaultAdminHeader","UserResultContainer"],"sourceRoot":""}