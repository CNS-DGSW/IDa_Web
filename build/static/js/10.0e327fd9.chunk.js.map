{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","components/Admin/UserResult/UserResult.tsx","containers/Admin/UserResult/UserResultContainer.tsx","pages/AdminPage/UserResultPage.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","exact","UserResult","userResultList","tryChangeFirstResultStatus","tryChangeSecondResultStatus","onChangeFirstApply","onChangeSecondApply","onClickSetFirstSelection","onClickSetSecondSelection","onClick","map","userResult","idx","key","target","href","submitCode","name","email","firstApplyTypeString","onChange","e","value","ApplyType","COMMON","ApplyDetailType","applyDetailModel","special","apply","i","undefined","models","applyName","model","k","SPECIAL","other","OTHER","isPassedFirstApply","finalApplyTypeString","isPassedSecondApply","observer","history","useHistory","useStore","store","AdminStore","getUserResultList","changeFirstApplyStatus","changeSecondApplyStatus","changeSecondResultStatus","changeFirstResultStatus","setFirstSelection","setSecondSelection","useState","setUserResultList","tryGetUserResultList","useCallback","then","res","console","log","data","catch","err","handleAdmin","useEffect","userId","status","split","applyDetail","userIdx","UserRatePage","UserResultContainer"],"mappings":"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","file":"static/js/10.0e327fd9.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./DefaultAdminHeader.scss\";\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\n\ninterface DefaultAdminHeaderProps {\n  children: React.ReactNode;\n}\n\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\n  return (\n    <>\n      <HeaderContainer theme={true} />\n      <div className=\"Admin\">\n        <div className=\"Admin-header\">\n          <NavLink\n            to=\"/admin/userList\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>지원자 현황</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/schoolCity\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>출신교별 현황</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/userRate\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>입학지원자경쟁률</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/receiptStatus\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>신입생 입학 전형 원부</span>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/admin/secondScore\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>2차 전형 점수 관리</span>\n          </NavLink>\n\n          <NavLink\n            to=\"/admin/interviewScore\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>2차 전형 면접 점수</span>\n          </NavLink>\n\n          <NavLink\n            to=\"/admin/userListPassed\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>1차/최종 합격 여부</span>\n          </NavLink>\n\n          <NavLink\n            to=\"/admin/userResultPage\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>결과 변경</span>\n          </NavLink>\n        </div>\n      </div>\n      {children}\n    </>\n  );\n};\n\nexport default DefaultAdminHeader;\n","import React from \"react\";\nimport \"./UserResult.scss\";\nimport ApplyType from \"util/enums/Apply\";\nimport ApplyDetailType from \"util/enums/ApplyDetail\";\nimport { findNameByValue } from \"models/ApplyDetailModel\";\nimport { findApplyByString } from \"util/enums/Apply\";\nimport { UserResult as UserResultType } from \"util/types/UserResult\";\nimport applyDetailModel from \"models/ApplyDetailModel\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface UserResultProps {\n  userResultList: UserResultType[];\n  tryChangeFirstResultStatus: (userIdx: number) => void;\n  tryChangeSecondResultStatus: (userIdx: number) => void;\n  onChangeFirstApply: (userId: number, status: string) => void;\n  onChangeSecondApply: (userId: number, status: string) => void;\n  onClickSetFirstSelection: () => void;\n  onClickSetSecondSelection: () => void;\n}\n\nconst UserResult = ({\n  userResultList,\n  tryChangeFirstResultStatus,\n  tryChangeSecondResultStatus,\n  onChangeFirstApply,\n  onChangeSecondApply,\n  onClickSetFirstSelection,\n  onClickSetSecondSelection,\n}: UserResultProps) => {\n  return (\n    <>\n      <div>\n        <button onClick={onClickSetFirstSelection} className=\"_button false\">\n          1차 합격 산출\n        </button>\n        {\"    \"}\n        <button onClick={onClickSetSecondSelection} className=\"_button false\">\n          2차 합격 산출\n        </button>\n      </div>\n      <table className=\"table-list\">\n        <thead>\n          <tr className=\"table-list-title\">\n            <th>접수 번호</th>\n            <th>이름</th>\n            <th>아이디</th>\n            <th>1차 전형</th>\n            <th>1차 합격</th>\n            <th>2차 전형</th>\n            <th>2차 합격</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userResultList.map((userResult, idx) => (\n            <tr key={idx}>\n              <td>\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\n                  {userResult.submitCode}\n                  {/* 보이는 id와 실제 이동되는 쿼리의 값이 다름 */}\n                </a>\n              </td>\n              <td>\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\n                  {userResult.name}\n                </a>\n              </td>\n              <td>\n                <a target=\"_blank\" href={`/write?userIdx=${userResult.idx}`}>\n                  {userResult.email}\n                </a>\n              </td>\n\n              {/* 1차 전형 */}\n              <td>\n                <b>{userResult.firstApplyTypeString}</b>\n                <br />\n                <select\n                  onChange={(e) => {\n                    onChangeFirstApply(userResult.idx, e.target.value);\n                  }}\n                >\n                  {\" \"}\n                  <option\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\n                  >\n                    -\n                  </option>\n                  <option\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\n                  >\n                    일반 전형 - 일반 전형\n                  </option>\n                  {applyDetailModel.special.map((apply, i) => {\n                    if (apply.models !== undefined) {\n                      const applyName = apply.name;\n                      return apply.models.map((model, k) => (\n                        <option\n                          key={k}\n                          value={ApplyType.SPECIAL + \"-\" + model.value}\n                        >\n                          특별 전형 - {applyName} - {model.name}\n                        </option>\n                      ));\n                    }\n                    return (\n                      <option\n                        key={i}\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\n                      >\n                        특별 전형 - {apply.name}\n                      </option>\n                    );\n                  })}\n                  {applyDetailModel.other.models.map((apply) => (\n                    <option value={ApplyType.OTHER + \"-\" + apply.value}>\n                      특례 입학 - {apply.name}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                {userResult.isPassedFirstApply ? (\n                  <button\n                    className=\"_button true pointer\"\n                    onClick={() => tryChangeFirstResultStatus(userResult.idx)}\n                  >\n                    합격\n                  </button>\n                ) : (\n                  <button\n                    className=\"_button false pointer\"\n                    onClick={() => tryChangeFirstResultStatus(userResult.idx)}\n                  >\n                    불합격\n                  </button>\n                )}\n              </td>\n              {/* 2차 전형 */}\n              <td>\n                {\" \"}\n                <b>{userResult.finalApplyTypeString}</b>\n                <br />\n                <select\n                  onChange={(e) => {\n                    onChangeSecondApply(userResult.idx, e.target.value);\n                  }}\n                >\n                  {\" \"}\n                  <option\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\n                  >\n                    -\n                  </option>\n                  <option\n                    value={ApplyType.COMMON + \"-\" + ApplyDetailType.COMMON}\n                  >\n                    일반 전형 - 일반 전형\n                  </option>\n                  {applyDetailModel.special.map((apply, i) => {\n                    if (apply.models !== undefined) {\n                      const applyName = apply.name;\n                      return apply.models.map((model, k) => (\n                        <option\n                          key={k}\n                          value={ApplyType.SPECIAL + \"-\" + model.value}\n                        >\n                          특별 전형 - {applyName} - {model.name}\n                        </option>\n                      ));\n                    }\n                    return (\n                      <option\n                        key={i}\n                        value={ApplyType.SPECIAL + \"-\" + apply.value}\n                      >\n                        특별 전형 - {apply.name}\n                      </option>\n                    );\n                  })}\n                  {applyDetailModel.other.models.map((apply) => (\n                    <option value={ApplyType.OTHER + \"-\" + apply.value}>\n                      특례 입학 - {apply.name}\n                    </option>\n                  ))}\n                </select>\n              </td>\n              <td>\n                {\" \"}\n                {userResult.isPassedSecondApply ? (\n                  <button\n                    className=\"_button true pointer\"\n                    onClick={() => tryChangeSecondResultStatus(userResult.idx)}\n                  >\n                    합격\n                  </button>\n                ) : (\n                  <button\n                    className=\"_button false pointer\"\n                    onClick={() => tryChangeSecondResultStatus(userResult.idx)}\n                  >\n                    불합격\n                  </button>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default UserResult;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useStore from \"lib/hooks/useStore\";\nimport UserResult from \"components/Admin/UserResult\";\nimport { handleAdmin } from \"lib/handleErrors\";\nimport Apply from \"util/enums/Apply\";\nimport ApplyDetail from \"util/enums/ApplyDetail\";\nimport { UserResult as UserResultType } from \"util/types/UserResult\";\nimport { observer } from \"mobx-react\";\nimport { findNameByValue } from \"models/ApplyDetailModel\";\n\nconst UserRateContainer = ({}) => {\n  const history = useHistory();\n\n  const { store } = useStore();\n  const {\n    getUserResultList,\n    changeFirstApplyStatus,\n    changeSecondApplyStatus,\n    changeSecondResultStatus,\n    changeFirstResultStatus,\n    setFirstSelection,\n    setSecondSelection,\n  } = store.AdminStore;\n\n  const [userResultList, setUserResultList] = useState<UserResultType[]>([]);\n\n  // 지원자 현황 받아오기\n  const tryGetUserResultList = useCallback(() => {\n    getUserResultList()\n      .then((res) => {\n        console.log(res.data);\n        setUserResultList(res.data);\n      })\n      .catch((err) => {\n        handleAdmin(err, history);\n      });\n  }, []);\n\n  useEffect(() => {\n    tryGetUserResultList();\n  }, [tryGetUserResultList]);\n\n  const onChangeFirstApply = useCallback((userId, status) => {\n    const apply = status.split(\"-\")[0];\n    const applyDetail = status.split(\"-\")[1];\n\n    changeFirstApplyStatus(userId, apply, applyDetail).then(() => {\n      tryGetUserResultList();\n    });\n  }, []);\n\n  const onChangeSecondApply = useCallback((userId, status) => {\n    const apply = status.split(\"-\")[0];\n    const applyDetail = status.split(\"-\")[1];\n\n    changeSecondApplyStatus(userId, apply, applyDetail).then(() => {\n      tryGetUserResultList();\n    });\n  }, []);\n\n  const tryChangeFirstResultStatus = useCallback((userIdx: number) => {\n    changeFirstResultStatus(userIdx).then(() => {\n      tryGetUserResultList();\n    });\n  }, []);\n\n  const tryChangeSecondResultStatus = useCallback((userIdx: number) => {\n    changeSecondResultStatus(userIdx).then(() => {\n      tryGetUserResultList();\n    });\n  }, []);\n\n  const onClickSetFirstSelection = useCallback(() => {\n    setFirstSelection().then(() => {\n      tryGetUserResultList();\n    });\n  }, []);\n\n  const onClickSetSecondSelection = useCallback(() => {\n    setSecondSelection().then(() => {\n      tryGetUserResultList();\n    });\n  }, []);\n\n  return (\n    <UserResult\n      userResultList={userResultList}\n      onChangeFirstApply={onChangeFirstApply}\n      onChangeSecondApply={onChangeSecondApply}\n      tryChangeFirstResultStatus={tryChangeFirstResultStatus}\n      tryChangeSecondResultStatus={tryChangeSecondResultStatus}\n      onClickSetFirstSelection={onClickSetFirstSelection}\n      onClickSetSecondSelection={onClickSetSecondSelection}\n    />\n  );\n};\n\nexport default observer(UserRateContainer);\n","import React from \"react\";\nimport UserResultContainer from \"containers/Admin/UserResult/UserResultContainer\";\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\n\nconst UserRatePage = () => {\n  return (\n    <DefaultAdminHeader>\n      <UserResultContainer />\n    </DefaultAdminHeader>\n  );\n};\n\nexport default UserRatePage;\n"],"sourceRoot":""}