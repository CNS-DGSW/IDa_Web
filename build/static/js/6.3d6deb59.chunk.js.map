{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","components/Admin/SecondTypeScore/SecondTypeScore.tsx","containers/Admin/SecondTypeScore/SecondTypeScoreContainer.tsx","pages/AdminPage/SecondTypeScorePage.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","exact","SecondTypeScore","tryDown","scoreDate","select","setSelect","tryUpload","name","id","onChange","e","target","value","onClick","htmlFor","type","data","map","i","key","examCode","userName","gradeType","cityName","applyType","gradeScore","absenceScore","volunteerScore","additionalScore","jobAptitudeScore","interviewScore","swAbilityScore","cooperationScore","totalInterviewScore","totalScore","isPassed","finalApplyType","observer","history","useHistory","store","useStore","GetSoftWare","ExcelApi","GetJob","GetCodingTest","GetSecondScoreExcel","uploadSw","uploadCodingTest","uploadJob","useState","setScoreDate","getSecondScore","ScoreStore","handleSecondScore","a","then","res","catch","err","handleAdmin","content","files","length","file","toast","success","response","status","warning","useEffect","error","SecondTypeScorePage"],"mappings":"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","file":"static/js/6.3d6deb59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 면접 점수</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","import React from \"react\";\r\nimport { SecondScoreResponse } from \"util/types/Response\";\r\nimport \"./SecondTypeScore.scss\";\r\n\r\ninterface SecondTypeScoreProps {\r\n  tryDown: (key: string) => void;\r\n  scoreDate: SecondScoreResponse | undefined;\r\n  select: string;\r\n  setSelect: React.Dispatch<React.SetStateAction<string>>;\r\n  tryUpload: (e: React.ChangeEvent<HTMLInputElement>, content: string) => void;\r\n}\r\n\r\nconst SecondTypeScore = ({\r\n  tryDown,\r\n  scoreDate,\r\n  select,\r\n  setSelect,\r\n  tryUpload,\r\n}: SecondTypeScoreProps) => {\r\n  return (\r\n    <div className=\"SecondScore\">\r\n      <span className=\"SecondScore-title\">2차 전형 점수 관리</span>\r\n      <div className=\"SecondScore-buttons\">\r\n        <select\r\n          className=\"SecondScore-buttons-s-op\"\r\n          name=\"\"\r\n          id=\"\"\r\n          onChange={(e) => {\r\n            setSelect(e.target.value);\r\n          }}\r\n        >\r\n          <option className=\"SecondScore-buttons-s-op\" value={\"0\"}>\r\n            다운로드\r\n          </option>\r\n          <option className=\"SecondScore-buttons-s-op\" value={\"1\"}>\r\n            업로드\r\n          </option>\r\n        </select>\r\n        {select === \"0\" ? (\r\n          <>\r\n            <div className=\"SecondScore-buttons-download\">\r\n              <span>소프트웨어역량평가</span>\r\n              <button className=\"buttons\" onClick={() => tryDown(\"sw\")}>\r\n                서식 다운로드\r\n              </button>\r\n            </div>\r\n            <div className=\"SecondScore-buttons-download\">\r\n              <span>직무능력검사</span>\r\n              <button className=\"buttons\" onClick={() => tryDown(\"job\")}>\r\n                서식 다운로드\r\n              </button>\r\n            </div>\r\n            <div className=\"SecondScore-buttons-download\">\r\n              <span>코딩테스트</span>\r\n              <button className=\"buttons\" onClick={() => tryDown(\"coding\")}>\r\n                서식 다운로드\r\n              </button>\r\n            </div>\r\n            <div className=\"SecondScore-buttons-download\">\r\n              <span>최종 결과 다운로드</span>\r\n              <button\r\n                className=\"buttons\"\r\n                onClick={() => tryDown(\"secondScore\")}\r\n              >\r\n                엑셀 다운로드\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"SecondScore-buttons-upload\">\r\n              <span>소프트웨어역량평가</span>\r\n              <label htmlFor=\"input-file1\" className=\"buttons\">\r\n                업로드\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"input-file1\"\r\n                className=\"input-file\"\r\n                onChange={(e) => tryUpload(e, \"sw\")}\r\n              />\r\n            </div>\r\n            <div className=\"SecondScore-buttons-upload\">\r\n              <span>직무능력검사</span>\r\n              <label htmlFor=\"input-file2\" className=\"buttons\">\r\n                업로드\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"input-file2\"\r\n                className=\"input-file\"\r\n                onChange={(e) => tryUpload(e, \"job\")}\r\n              />\r\n            </div>\r\n            <div className=\"SecondScore-buttons-upload\">\r\n              <span>코딩테스트</span>\r\n              <label htmlFor=\"input-file3\" className=\"buttons\">\r\n                업로드\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"input-file3\"\r\n                className=\"input-file\"\r\n                onChange={(e) => tryUpload(e, \"coding\")}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"SecondScore-table\">\r\n        <table className=\"SecondScore-table-list\">\r\n          <thead>\r\n            <tr className=\"SecondScore-table-list-title\">\r\n              <th>순번</th>\r\n              <th>수험번호</th>\r\n              <th>이름</th>\r\n              <th>학력</th>\r\n              <th>지역</th>\r\n              <th>1차합격전형</th>\r\n              <th>교과</th>\r\n              <th>출결</th>\r\n              <th>봉사</th>\r\n              <th>가산점</th>\r\n              <th>면접</th>\r\n              <th>창의협업역량</th>\r\n              <th>심층면접</th>\r\n              <th>직무적성</th>\r\n              <th>sw역량</th>\r\n              <th>합계</th>\r\n              <th>합격여부</th>\r\n              <th>최종합격전형</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {scoreDate?.data.map((i, key) => (\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n                {/* 순번 */}\r\n                <td>{i.examCode}</td>\r\n                {/* 수험번호 */}\r\n                <td>{i.userName}</td>\r\n                {/* 이름 */}\r\n                <td>\r\n                  {i.gradeType === \"UNGRADUATED\" && \"졸업예정\"}\r\n                  {i.gradeType === \"GRADUATED\" && \"졸업\"}\r\n                </td>\r\n                {/* 학력 */}\r\n                <td>{i.cityName}</td>\r\n                {/* 지역 */}\r\n                <td>\r\n                  {i.applyType === \"COMMON\" && \"일반전형\"}\r\n                  {i.applyType === \"SPECIAL\" && \"특별전형\"}\r\n                  {i.applyType === \"OTHER\" && \"특례입학\"}\r\n                </td>\r\n                {/* 1차 합격전형 */}\r\n                <td>{i.gradeScore}</td>\r\n                {/* 교과*/}\r\n                <td>{i.absenceScore}</td>\r\n                {/* 출결 */}\r\n                <td>{i.volunteerScore}</td>\r\n                {/* 봉사 */}\r\n                <td>{i.additionalScore}</td>\r\n                {/* 가산점 */}\r\n                <td>{i.jobAptitudeScore}</td>\r\n                {/* 직무적성 */}\r\n                <td>{i.interviewScore}</td>\r\n                {/* 면접 점수 */}\r\n                <td>{i.swAbilityScore}</td>\r\n                {/* sw역량 */}\r\n                <td>{i.cooperationScore}</td>\r\n                {/* 창의협업역량 */}\r\n                <td>{i.totalInterviewScore}</td>\r\n                {/* 심층면접 */}\r\n                <td>{i.totalScore}</td>\r\n                {/* 합계 */}\r\n                <td>\r\n                  {i.isPassed === true\r\n                    ? \"합격\"\r\n                    : i.isPassed === false\r\n                    ? \"불합격\"\r\n                    : \"\"}\r\n                </td>\r\n                {/* 합격여부 */}\r\n                <td>\r\n                  {i.finalApplyType === \"COMMON\" && \"일반전형\"}\r\n                  {i.finalApplyType === \"SPECIAL\" && \"특별전형\"}\r\n                  {i.finalApplyType === \"OTHER\" && \"특례입학\"}\r\n                </td>\r\n                {/* 최종합격전형 */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecondTypeScore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport SecondTypeScore from \"components/Admin/SecondTypeScore\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExcelApi from \"assets/api/ExcelApi\";\r\nimport { SecondScoreResponse } from \"util/types/Response\";\r\nimport { toast } from \"react-toastify\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\n\r\nconst SecondTypeScoreContainer = ({}) => {\r\n  const history = useHistory();\r\n  const { store } = useStore();\r\n  const {\r\n    GetSoftWare,\r\n    GetJob,\r\n    GetCodingTest,\r\n    GetSecondScoreExcel,\r\n    uploadSw,\r\n    uploadCodingTest,\r\n    uploadJob,\r\n  } = ExcelApi;\r\n\r\n  const [scoreDate, setScoreDate] = useState<SecondScoreResponse>();\r\n  // 2차 전형 점수를 관리하는 useState\r\n  const [select, setSelect] = useState<string>(\"0\");\r\n  // 업로드 다운로드 선택하는 select\r\n\r\n  const { getSecondScore } = store.ScoreStore;\r\n\r\n  // 2차 전형 점수를 받아오는 함수\r\n  const handleSecondScore = async () => {\r\n    await getSecondScore()\r\n      .then((res) => {\r\n        setScoreDate(res);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  };\r\n\r\n  // 파일을 다운받는 함수\r\n  const tryDown = (key: string) => {\r\n    switch (key) {\r\n      case \"sw\":\r\n        GetSoftWare().catch((err) => {\r\n          toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요\");\r\n        });\r\n        break;\r\n\r\n      case \"job\":\r\n        GetJob().catch((err) => {\r\n          toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요\");\r\n        });\r\n        break;\r\n\r\n      case \"coding\":\r\n        GetCodingTest().catch((err) => {\r\n          toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요\");\r\n        });\r\n        break;\r\n\r\n      case \"secondScore\":\r\n        GetSecondScoreExcel().catch((err) => {\r\n          toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요\");\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  // 파일 업로드 하는 함수\r\n  const tryUpload = async (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    content: string\r\n  ) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      let file = e.target.files[0];\r\n      switch (content) {\r\n        case \"sw\":\r\n          await uploadSw(file)\r\n            .then(() => {\r\n              toast.success(\"파일 업로드 되었습니다\");\r\n            })\r\n            .catch((err) => {\r\n              if (err.response?.status === 400) {\r\n                toast.warning(\"파일을 잘못선택하였습니다\");\r\n              }\r\n            });\r\n          break;\r\n        case \"job\":\r\n          await uploadJob(file)\r\n            .then(() => {\r\n              toast.success(\"파일 업로드 되었습니다\");\r\n            })\r\n            .catch((err) => {\r\n              if (err.response?.status === 400) {\r\n                toast.warning(\"파일을 잘못선택하였습니다\");\r\n              }\r\n            });\r\n          break;\r\n        case \"coding\":\r\n          await uploadCodingTest(file)\r\n            .then(() => {\r\n              toast.success(\"파일 업로드 되었습니다\");\r\n            })\r\n            .catch((err) => {\r\n              if (err.response?.status === 400) {\r\n                toast.warning(\"파일을 잘못선택하였습니다\");\r\n              }\r\n            });\r\n          break;\r\n      }\r\n      handleSecondScore();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSecondScore();\r\n  }, []);\r\n\r\n  return (\r\n    <SecondTypeScore\r\n      tryDown={tryDown}\r\n      scoreDate={scoreDate}\r\n      select={select}\r\n      setSelect={setSelect}\r\n      tryUpload={tryUpload}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(SecondTypeScoreContainer);\r\n","import React from \"react\";\r\nimport SecondTypeScoreContainer from \"containers/Admin/SecondTypeScore/SecondTypeScoreContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst SecondTypeScorePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <SecondTypeScoreContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default SecondTypeScorePage;\r\n"],"sourceRoot":""}