{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","util/enums/ListPassedCategory.ts","components/Admin/UserListPassed/UserListPassed.tsx","containers/Admin/UserListPassed/UserListPassedContainer.tsx","pages/AdminPage/UserListPassed.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","exact","ListPassedCategory","UserListPassed","tryDownExcel","passedStatus","selectListPassed","listPassed","firstData","secondData","tryChangeFirstStudent","tryChangeSecondStudent","onClick","onChange","e","target","value","Final","First","map","i","idx","key","href","name","schoolName","cityName","studentTel","email","moment","birth","format","submitCode","examCode","firstApplyType","finalApplyType","applyType","observer","store","useStore","history","useHistory","AdminStore","getUserListPassed","getViewFirstStudent","adminChangeFirstStudent","getViewSecondStudent","adminChangeSecondStudent","GetFirstSelection","ExcelApi","GetSecondSelection","useState","setListPassed","setFirstData","setSecondData","setPassedStatus","tryGetUserListPassed","useCallback","undefined","then","res","data","catch","err","handleAdmin","index","tryViewFirstStudent","console","log","tryViewSecondStudent","useEffect","toast","error","UserRatePage"],"mappings":"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","file":"static/js/7.f8544f4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 면접 점수</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","enum ListPassedCategory {\r\n  First = \"First\",\r\n  Final = \"Final\",\r\n}\r\n\r\nexport default ListPassedCategory;\r\n","import React from \"react\";\r\nimport { ListPassed } from \"util/types/UserList\";\r\nimport \"./UserListPassed.scss\";\r\nimport ListPassedCategory from \"util/enums/ListPassedCategory\";\r\nimport moment from \"moment\";\r\nimport applyDetailModel from \"models/ApplyDetailModel\";\r\n\r\ninterface UserListPassedProps {\r\n  tryDownExcel: (key: string) => void;\r\n  passedStatus: ListPassed[];\r\n  selectListPassed: (index: string) => void;\r\n  listPassed: ListPassedCategory;\r\n  firstData: boolean;\r\n  secondData: boolean;\r\n  tryChangeFirstStudent: () => void;\r\n  tryChangeSecondStudent: () => void;\r\n}\r\n\r\nconst UserListPassed = ({\r\n  tryDownExcel,\r\n  passedStatus,\r\n  selectListPassed,\r\n  listPassed,\r\n  firstData,\r\n  secondData,\r\n  tryChangeFirstStudent,\r\n  tryChangeSecondStudent,\r\n}: UserListPassedProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"listPassed\">\r\n        <span className=\"listPassed-title\">1차 / 최종 합격 여부</span>\r\n        <div className=\"listPassed-firstBtn\">\r\n          <button onClick={() => tryDownExcel(\"first\")} className=\"header-btn\">\r\n            1차 합격 엑셀\r\n          </button>\r\n          {firstData ? (\r\n            <>\r\n              <button\r\n                className=\"header-btn true\"\r\n                onClick={() => tryChangeFirstStudent()}\r\n              >\r\n                1차 합격 확인가능\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"header-btn false\"\r\n                onClick={() => tryChangeFirstStudent()}\r\n              >\r\n                1차 합격 확인 불가능\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"listPassed-finalBtn\">\r\n          <button onClick={() => tryDownExcel(\"final\")} className=\"header-btn\">\r\n            최종 합격 엑셀\r\n          </button>\r\n          {secondData ? (\r\n            <>\r\n              <button\r\n                className=\"header-btn true\"\r\n                onClick={() => {\r\n                  tryChangeSecondStudent();\r\n                }}\r\n              >\r\n                최종 합격 확인가능\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button\r\n                className=\"header-btn false\"\r\n                onClick={() => {\r\n                  tryChangeSecondStudent();\r\n                }}\r\n              >\r\n                최종 합격 확인 불가능\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <select\r\n          className=\"listPassed-select\"\r\n          onChange={(e) => {\r\n            selectListPassed(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"0\">1차 합격</option>\r\n          <option value=\"1\" className=\"listPassed-select-op\">\r\n            최종 합격\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div className=\"passed\">\r\n        <table className=\"passed-list\">\r\n          <thead>\r\n            <tr className=\"passed-list-title\">\r\n              {listPassed === ListPassedCategory.Final && (\r\n                <>\r\n                  <th>순번</th>\r\n                  <th>이름</th>\r\n                  <th>출신학교</th>\r\n                  <th>지역</th>\r\n                  <th>전화번호</th>\r\n                  <th>이메일</th>\r\n                  <th>생년월일</th>\r\n                  <th>접수번호</th>\r\n                  <th>수험번호</th>\r\n                  <th>1차 합격전형</th>\r\n                  <th>합격전형</th>\r\n                </>\r\n              )}\r\n              {listPassed === ListPassedCategory.First && (\r\n                <>\r\n                  <th>순번</th>\r\n                  <th>이름</th>\r\n                  <th>출신학교</th>\r\n                  <th>지역</th>\r\n                  <th>전화번호</th>\r\n                  <th>이메일</th>\r\n                  <th>생년월일</th>\r\n                  <th>접수번호</th>\r\n                  <th>수험번호</th>\r\n                  <th>지원전형</th>\r\n                  <th>합격전형</th>\r\n                </>\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {passedStatus.map((i, idx) => {\r\n              return (\r\n                <tr key={idx}>\r\n                  {listPassed === ListPassedCategory.Final && (\r\n                    <>\r\n                      <td>{idx + 1}</td>\r\n                      <td>\r\n                        <a target=\"_blank\" href={`/write?userIdx=${i.idx}`}>\r\n                          {i.name}\r\n                        </a>\r\n                      </td>\r\n                      <td>{i.schoolName}</td>\r\n                      <td>{i.cityName}</td>\r\n                      <td>{i.studentTel}</td>\r\n                      <td>{i.email}</td>\r\n                      <td>{moment(i.birth).format(\"YYYY-MM-DD\")}</td>\r\n                      <td>{i.submitCode}</td>\r\n                      <td>{i.examCode}</td>\r\n                      <td>{i.firstApplyType}</td>\r\n                      <td>{i.finalApplyType}</td>\r\n                    </>\r\n                  )}\r\n                  {listPassed === ListPassedCategory.First && (\r\n                    <>\r\n                      <td>{idx + 1}</td>\r\n                      <td>\r\n                        <a target=\"_blank\" href={`/write?userIdx=${i.idx}`}>\r\n                          {i.name}\r\n                        </a>\r\n                      </td>\r\n                      <td>{i.schoolName}</td>\r\n                      <td>{i.cityName}</td>\r\n                      <td>{i.studentTel}</td>\r\n                      <td>{i.email}</td>\r\n                      <td>{moment(i.birth).format(\"YYYY-MM-DD\")}</td>\r\n                      <td>{i.submitCode}</td>\r\n                      <td>{i.examCode}</td>\r\n                      <td>{i.applyType}</td>\r\n                      <td>{i.firstApplyType}</td>\r\n                    </>\r\n                  )}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListPassed;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport UserListPassed from \"components/Admin/UserListPassed\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ListPassed } from \"util/types/UserList\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\nimport ExcelApi from \"assets/api/ExcelApi\";\r\nimport ListPassedCategory from \"util/enums/ListPassedCategory\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UserListPassedContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const history = useHistory();\r\n  const {\r\n    getUserListPassed,\r\n    getViewFirstStudent,\r\n    adminChangeFirstStudent,\r\n    getViewSecondStudent,\r\n    adminChangeSecondStudent,\r\n  } = store.AdminStore;\r\n\r\n  const { GetFirstSelection, GetSecondSelection } = ExcelApi;\r\n  const [listPassed, setListPassed] = useState<ListPassedCategory>(\r\n    ListPassedCategory.First\r\n  );\r\n  const [firstData, setFirstData] = useState<boolean>(false);\r\n  const [secondData, setSecondData] = useState<boolean>(false);\r\n\r\n  const [passedStatus, setPassedStatus] = useState<ListPassed[]>([]);\r\n\r\n  // 지원자 합격 여부 받아오기\r\n  const tryGetUserListPassed = useCallback(() => {\r\n    getUserListPassed(\r\n      listPassed === ListPassedCategory.Final ? true : undefined\r\n    )\r\n      .then((res) => {\r\n        setPassedStatus(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, [listPassed]);\r\n\r\n  // 1차 합격자 또는 2차 합격자 엑셀 다운\r\n  const tryDownExcel = (key: string) => {\r\n    switch (key) {\r\n      case \"first\":\r\n        GetFirstSelection().catch((err) => {\r\n          toast.error(\"오류가 발생하였습니다.\");\r\n        });\r\n        break;\r\n\r\n      case \"final\":\r\n        GetSecondSelection().catch((err) => {\r\n          toast.error(\"오류가 발생하였습니다.\");\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  // 1차 또는 최종 카테고리 선택\r\n  const selectListPassed = useCallback(\r\n    (index: string) => {\r\n      if (index === \"0\") {\r\n        setListPassed(ListPassedCategory.First);\r\n      } else {\r\n        setListPassed(ListPassedCategory.Final);\r\n      }\r\n    },\r\n    [listPassed]\r\n  );\r\n\r\n  const tryViewFirstStudent = useCallback(() => {\r\n    getViewFirstStudent().then((res) => {\r\n      setFirstData(res.data);\r\n    });\r\n  }, [getViewFirstStudent, setFirstData]);\r\n\r\n  const tryChangeFirstStudent = useCallback(() => {\r\n    adminChangeFirstStudent().then((res) => {\r\n      tryViewFirstStudent();\r\n      console.log(res);\r\n    });\r\n  }, [adminChangeFirstStudent, tryViewFirstStudent]);\r\n\r\n  const tryViewSecondStudent = useCallback(() => {\r\n    getViewSecondStudent().then((res) => {\r\n      setSecondData(res.data);\r\n    });\r\n  }, [getViewSecondStudent, setSecondData]);\r\n\r\n  const tryChangeSecondStudent = useCallback(() => {\r\n    adminChangeSecondStudent().then((res) => {\r\n      tryViewSecondStudent();\r\n      console.log(res);\r\n    });\r\n  }, [adminChangeSecondStudent, tryViewSecondStudent]);\r\n\r\n  useEffect(() => {\r\n    tryGetUserListPassed();\r\n  }, [tryGetUserListPassed]);\r\n\r\n  useEffect(() => {\r\n    tryViewFirstStudent();\r\n  }, [tryViewFirstStudent]);\r\n\r\n  useEffect(() => {\r\n    tryViewSecondStudent();\r\n  }, [tryChangeSecondStudent]);\r\n  return (\r\n    <>\r\n      <UserListPassed\r\n        tryDownExcel={tryDownExcel}\r\n        passedStatus={passedStatus}\r\n        selectListPassed={selectListPassed}\r\n        listPassed={listPassed}\r\n        firstData={firstData}\r\n        secondData={secondData}\r\n        tryChangeFirstStudent={tryChangeFirstStudent}\r\n        tryChangeSecondStudent={tryChangeSecondStudent}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(UserListPassedContainer);\r\n","import React from \"react\";\r\nimport UserListPassedContainer from \"containers/Admin/UserListPassed/UserListPassedContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst UserRatePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <UserListPassedContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default UserRatePage;\r\n"],"sourceRoot":""}