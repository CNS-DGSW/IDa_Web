{"version":3,"file":"static/js/734.f8ae9a9f.chunk.js","mappings":"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","sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","components/Admin/AdminReceiptStatus/AdminReceiptStatus.tsx","containers/Admin/AdminReceiptStatus/AdminReceiptStatusContainer.tsx","pages/AdminPage/AdminReceiptStatusPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/detailScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 점수 관리 <br></br>(직무적성, 학업 및 진로역량, 컴퓨팅)\r\n            </span>\r\n          </NavLink>\r\n          {/*<NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 면접 점수\r\n              <br />\r\n              (창의협업, 구술면접)\r\n            </span>\r\n  </NavLink>*/}\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","import Convertor from \"lib/Convertor\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Receipt } from \"util/types/ReceiptType\";\r\nimport \"./AdminReceiptStatus.scss\";\r\n\r\ninterface AdminReceiptStatusProps {\r\n  receiptStatus: Receipt[];\r\n  setReceiptStatus: React.Dispatch<React.SetStateAction<Receipt[]>>;\r\n  setSearch: React.Dispatch<React.SetStateAction<string>>;\r\n  search: string;\r\n  getReceiptStatusExcel: () => Promise<any>;\r\n  handleCancelSubmit: (userIdx: number, name: string) => Promise<void>;\r\n}\r\n\r\nconst AdminReceiptStatus = ({\r\n  receiptStatus,\r\n  setReceiptStatus,\r\n  setSearch,\r\n  search,\r\n  getReceiptStatusExcel,\r\n  handleCancelSubmit,\r\n}: AdminReceiptStatusProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"receipt\">\r\n        <div className=\"receipt-title\">신입생 입학 전형 원부</div>\r\n        <div className=\"receipt-btn\" onClick={() => getReceiptStatusExcel()}>\r\n          현자료 엑셀 내려받기\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          className=\"receipt-input\"\r\n          placeholder=\"통합검색\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n\r\n        <table className=\"receipt-list\">\r\n          <thead>\r\n            <tr className=\"receipt-list-header\">\r\n              <th>순번</th>\r\n              <th>접수번호</th>\r\n              <th>수험번호</th>\r\n              <th>성명</th>\r\n              <th>생년월일</th>\r\n              <th>지역명</th>\r\n              <th>출신학교</th>\r\n              <th>학력</th>\r\n              <th>전형</th>\r\n              <th>교과</th>\r\n              <th>출결</th>\r\n              <th>봉사</th>\r\n              <th>가산점</th>\r\n              <th>점수합계/일반</th>\r\n              <th>점수합계/특별</th>\r\n              <th>최종제출여부</th>\r\n              <th>제출취소</th>\r\n              <th>원서출력</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {search\r\n              ? receiptStatus\r\n                  .filter(\r\n                    (name) =>\r\n                      (typeof name.name === \"string\" &&\r\n                        name.name.includes(search)) ||\r\n                      (typeof name.cityName === \"string\" &&\r\n                        name.cityName.includes(search)) ||\r\n                      (typeof name.examCode === \"string\" &&\r\n                        name.examCode.includes(search)) ||\r\n                      (typeof name.submitCode === \"string\" &&\r\n                        name.submitCode.includes(search)) ||\r\n                      (typeof name.schoolName === \"string\" &&\r\n                        name.schoolName.includes(search)) ||\r\n                      (typeof name.applyTypeString === \"string\" &&\r\n                        name.applyTypeString.includes(search))\r\n                  )\r\n                  .map((filteredName, idx) => (\r\n                    <tr key={idx}>\r\n                      <td>{filteredName.idx}</td>\r\n                      <td>{filteredName.submitCode}</td>\r\n                      <td>{filteredName.examCode}</td>\r\n                      <td>{filteredName.name}</td>\r\n                      <td>\r\n                        {filteredName.birth &&\r\n                          moment(filteredName.birth).format(\"yyyy-MM-DD\")}\r\n                      </td>\r\n                      <td>{filteredName.cityName}</td>\r\n                      <td>{filteredName.schoolName}</td>\r\n                      <td>{Convertor.GradeType(filteredName.gradeType)}</td>\r\n                      <td>{filteredName.applyTypeString}</td>\r\n                      <td>{filteredName.gradeScore}</td>\r\n                      <td>{filteredName.absenceScore}</td>\r\n                      <td>{filteredName.volunteerScore}</td>\r\n                      <td>{filteredName.additionalScore}</td>\r\n                      <td>{filteredName.commonTotalScore}</td>\r\n                      {/* 점수 합계/일반 */}\r\n                      <td>{filteredName.specialTotalScore}</td>\r\n                      {/* 점수 합계/특별 */}\r\n                      <td>{filteredName.isSubmit ? \"제출완료\" : \"미제출\"}</td>\r\n                      <td>\r\n                        {filteredName.isSubmit ? (\r\n                          <button\r\n                            onClick={() => {\r\n                              handleCancelSubmit(\r\n                                filteredName.userIdx,\r\n                                filteredName.name\r\n                              );\r\n                            }}\r\n                          >\r\n                            제출취소\r\n                          </button>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <button>출력</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n              : receiptStatus.map((res, idx) => (\r\n                  <tr key={idx}>\r\n                    <td>{res.idx}</td>\r\n                    <td>{res.submitCode}</td>\r\n                    <td>{res.examCode}</td>\r\n                    <td>{res.name}</td>\r\n                    <td>\r\n                      {res.birth && moment(res.birth).format(\"yyyy-MM-DD\")}\r\n                    </td>\r\n                    <td>{res.cityName}</td>\r\n                    <td>{res.schoolName}</td>\r\n                    <td>{Convertor.GradeType(res.gradeType)}</td>\r\n                    <td>{res.applyTypeString}</td>\r\n                    <td>{res.gradeScore}</td>\r\n                    <td>{res.absenceScore}</td>\r\n                    <td>{res.volunteerScore}</td>\r\n                    <td>{res.additionalScore}</td>\r\n                    <td>{res.commonTotalScore}</td>\r\n                    {/* 점수 합계/일반 */}\r\n                    <td>{res.specialTotalScore}</td>\r\n                    {/* 점수 합계/특별 */}\r\n                    <td>{res.isSubmit ? \"제출완료\" : \"미제출\"}</td>\r\n                    <td>\r\n                      {res.isSubmit ? (\r\n                        <button\r\n                          onClick={() => {\r\n                            handleCancelSubmit(res.userIdx, res.name);\r\n                          }}\r\n                        >\r\n                          제출취소\r\n                        </button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() =>\r\n                          window.open(`/print?userIdx=${res.userIdx}`, \"_blank\")\r\n                        }\r\n                      >\r\n                        출력\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminReceiptStatus;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport ReceiptStatus from \"../../../components/Admin/AdminReceiptStatus\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Receipt } from \"util/types/ReceiptType\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst AdminReceiptStatusContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const history = useHistory();\r\n\r\n  const [receiptStatus, setReceiptStatus] = useState<Receipt[]>([]);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const { getReceiptStatus, getReceiptStatusExcel, handleCancelSubmit } =\r\n    store.AdminStore;\r\n\r\n  //입학 전형 원부 받아오기\r\n  const getReceiptStatusCallBack = useCallback(() => {\r\n    getReceiptStatus()\r\n      .then((res) => {\r\n        // console.log(\r\n        //   res.data\r\n        //     .sort((a, b) => {\r\n        //       return a.totalScore - b.totalScore;\r\n        //     })\r\n        //     .map((user) => user.totalScore)\r\n        // );\r\n        setReceiptStatus(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, []);\r\n\r\n  const cancelSubmit = useCallback(\r\n    async (userIdx: number, name: string) => {\r\n      Swal.fire({\r\n        title: \"주의!!\",\r\n        text: `해당 유저(${name}) 를 제출 취소하시겠습니까?`,\r\n        showCancelButton: true,\r\n        icon: \"warning\",\r\n        cancelButtonText: \"취소\",\r\n        confirmButtonText: \"확인\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          await handleCancelSubmit(userIdx).then((response) => {\r\n            if (response.status === 200) {\r\n              const arr = receiptStatus.slice();\r\n              const idx = arr.findIndex((data) => data.userIdx === userIdx);\r\n              arr[idx].isSubmit = false;\r\n              arr[idx].submitCode = \"\";\r\n              arr[idx].examCode = \"\";\r\n              setReceiptStatus(arr);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    [receiptStatus]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getReceiptStatusCallBack();\r\n  }, [getReceiptStatusCallBack]);\r\n\r\n  return (\r\n    <>\r\n      <ReceiptStatus\r\n        receiptStatus={receiptStatus}\r\n        setSearch={setSearch}\r\n        search={search}\r\n        getReceiptStatusExcel={getReceiptStatusExcel}\r\n        handleCancelSubmit={cancelSubmit}\r\n        setReceiptStatus={setReceiptStatus}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(AdminReceiptStatusContainer);\r\n","import DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\nimport React from \"react\";\r\nimport AdminReceiptStatus from \"../../containers/Admin/AdminReceiptStatus/AdminReceiptStatusContainer\";\r\n\r\nconst AdminReceiptStatusPage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <AdminReceiptStatus />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default AdminReceiptStatusPage;\r\n"],"names":["_ref","children","_jsxs","_Fragment","_jsx","HeaderContainer","theme","className","NavLink","to","activeClassName","style","textAlign","display","exact","receiptStatus","setSearch","setReceiptStatus","search","getReceiptStatusExcel","handleCancelSubmit","onClick","type","placeholder","onChange","e","target","value","filter","name","includes","cityName","examCode","submitCode","schoolName","applyTypeString","map","filteredName","idx","birth","moment","format","Convertor","GradeType","gradeType","gradeScore","absenceScore","volunteerScore","additionalScore","commonTotalScore","specialTotalScore","isSubmit","userIdx","res","window","open","concat","observer","_objectDestructuringEmpty","store","useStore","history","useHistory","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_store$AdminStore","AdminStore","getReceiptStatus","getReceiptStatusCallBack","useCallback","then","data","catch","err","handleAdmin","cancelSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","Swal","title","text","showCancelButton","icon","cancelButtonText","confirmButtonText","_ref3","_callee","result","_context","isConfirmed","response","status","arr","slice","findIndex","stop","_x3","apply","arguments","_x","_x2","useEffect","ReceiptStatus","DefaultAdminHeader","AdminReceiptStatus"],"sourceRoot":""}