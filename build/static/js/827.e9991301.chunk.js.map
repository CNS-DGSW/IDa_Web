{"version":3,"file":"static/js/827.e9991301.chunk.js","mappings":"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","sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","util/enums/InterViewCategory.ts","components/Admin/InterViewScore/InterViewScore.tsx","containers/Admin/InterViewScore/InterViewScoreContainer.tsx","pages/AdminPage/InterViewScorePage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/detailScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 점수 관리 <br></br>(직무적성, 학업 및 진로역량, 컴퓨팅)\r\n            </span>\r\n          </NavLink>\r\n          {/*<NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 면접 점수\r\n              <br />\r\n              (창의협업, 구술면접)\r\n            </span>\r\n  </NavLink>*/}\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","enum InterViewCategory {\r\n  INTERVIEW = \"INTERVIEW\",\r\n  // 그룹면접\r\n  COOPERATION = \"COOPERATION\",\r\n  // 심층면접\r\n}\r\nexport default InterViewCategory;\r\n","import React from \"react\";\r\nimport \"./InterViewScore.scss\";\r\nimport { InterViewScoreResponse } from \"util/types/Response\";\r\nimport InterViewCategory from \"util/enums/InterViewCategory\";\r\n\r\ninterface InterViewScoreProps {\r\n  team: string;\r\n  setTeam: React.Dispatch<React.SetStateAction<string>>;\r\n  teamCount: number[] | undefined;\r\n  selectInterView: (index: string) => void;\r\n  scoreDate: InterViewScoreResponse | undefined;\r\n  tryDownExcel: () => void;\r\n  uploadFile: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  interView: InterViewCategory;\r\n  tryGetNumberTeam: () => void;\r\n  tyrUploadTeam: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  attend: string;\r\n  selectAttend: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nconst InterViewScore = ({\r\n  team,\r\n  setTeam,\r\n  teamCount,\r\n  interView,\r\n  selectInterView,\r\n  scoreDate,\r\n  tryDownExcel,\r\n  uploadFile,\r\n  tryGetNumberTeam,\r\n  tyrUploadTeam,\r\n  attend,\r\n  selectAttend,\r\n}: InterViewScoreProps) => {\r\n  return (\r\n    <div className=\"InterViewScore\">\r\n      <span className=\"InterViewScore-title\">\r\n        2차전형 (창의 협업, 구술 면접) 점수\r\n      </span>\r\n      <div className=\"InterViewScore-checkBox\">\r\n        <select\r\n          className=\"InterViewScore-checkBox-s-op\"\r\n          onChange={(e) => {\r\n            selectInterView(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"0\" className=\"InterViewScore-checkBox-s-op\">\r\n            {/* 그룹면접 */}\r\n            창의 협업\r\n          </option>\r\n          <option value=\"1\" className=\"InterViewScore-checkBox-s-op\">\r\n            {/* 심층면접 */}\r\n            구술면접\r\n          </option>\r\n        </select>\r\n        <select\r\n          className=\"InterViewScore-checkBox-s-op\"\r\n          onChange={(e) => {\r\n            setTeam(e.target.value);\r\n          }}\r\n          value={team}\r\n        >\r\n          <option className=\"InterViewScore-checkBox-s-op\" value=\"0\">\r\n            전체\r\n          </option>\r\n          {teamCount &&\r\n            teamCount.map((i, key) => (\r\n              <option key={key} value={i}>\r\n                {i}팀\r\n              </option>\r\n            ))}\r\n        </select>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>팀 번호 서식 다운로드</span>\r\n          <button onClick={() => tryGetNumberTeam()} className=\"buttons\">\r\n            다운로드\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>팀 번호 서식 업로드</span>\r\n          <label htmlFor=\"input-file2\" className=\"buttons\">\r\n            업로드\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"input-file2\"\r\n            className=\"input-file\"\r\n            onChange={(e) => tyrUploadTeam(e)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>출력용 &amp; 서식</span>\r\n          <button onClick={() => tryDownExcel()} className=\"buttons\">\r\n            다운로드\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>\r\n            {interView === InterViewCategory.INTERVIEW\r\n              ? \"구술 면접 점수\"\r\n              : \"창의 협업 점수\"}\r\n          </span>\r\n          <label htmlFor=\"input-file1\" className=\"buttons\">\r\n            업로드\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"input-file1\"\r\n            className=\"input-file\"\r\n            onChange={(e) => uploadFile(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"InterViewScore-table\">\r\n        <table className=\"InterViewScore-table-list\">\r\n          <thead>\r\n            <tr className=\"InterViewScore-table-list-title\">\r\n              <th>순번</th>\r\n              <th>수험번호</th>\r\n              <th>이름</th>\r\n              <th>참석여부</th>\r\n              <th>평가요소1</th>\r\n              <th>평가요소2</th>\r\n              <th>평가요소3</th>\r\n              <th>평가요소4</th>\r\n              <th>평가요소5</th>\r\n              {interView === InterViewCategory.INTERVIEW && (\r\n                <>\r\n                  <th>평가요소6</th>\r\n                  <th>평가요소7</th>\r\n                  <th>평가요소8</th>\r\n                  <th>평가요소9</th>\r\n                  <th>평가요소10</th>\r\n                </>\r\n              )}\r\n              {/* <th>평가요소 합산점수</th> */}\r\n              <th>\r\n                {\" \"}\r\n                {interView === InterViewCategory.INTERVIEW\r\n                  ? \"총점\"\r\n                  : \"전형별 창의 협업 점수\"}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {scoreDate?.data.map((i, key) => (\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n                <td>{i.examCode}</td>\r\n                <td>{i.userName}</td>\r\n                {/* <td>{i.isAttend ? \"참석\" : \"미참석\"}</td> */}\r\n                <td>\r\n                  <select value={attend} onChange={(e) => selectAttend(e)}>\r\n                    <option>참석</option>\r\n                    <option>미참석</option>\r\n                  </select>\r\n                </td>\r\n                <td>{i.evaluationFactor1}</td>\r\n                <td>{i.evaluationFactor2}</td>\r\n                <td>{i.evaluationFactor3}</td>\r\n                <td>{i.evaluationFactor4}</td>\r\n                <td>{i.evaluationFactor5}</td>\r\n                {interView === InterViewCategory.INTERVIEW && (\r\n                  <>\r\n                    <td>{i.evaluationFactor6}</td>\r\n                    <td>{i.evaluationFactor7}</td>\r\n                    <td>{i.evaluationFactor8}</td>\r\n                    <td>{i.evaluationFactor9}</td>\r\n                    <td>{i.evaluationFactor10}</td>\r\n                  </>\r\n                )}\r\n                {/* <td>\r\n                  {i.evaluationFactor1 +\r\n                    i.evaluationFactor2 +\r\n                    i.evaluationFactor3 +\r\n                    i.evaluationFactor4 +\r\n                    i.evaluationFactor5 +\r\n                    (i.evaluationFactor6 !== null ? i.evaluationFactor6 : 0) +\r\n                    (i.evaluationFactor7 !== null ? i.evaluationFactor7 : 0) +\r\n                    (i.evaluationFactor8 !== null ? i.evaluationFactor8 : 0)}\r\n                </td> */}\r\n                <td>{i.totalScore}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterViewScore;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport InterViewScore from \"components/Admin/InterViewScore\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { InterViewScoreResponse } from \"util/types/Response\";\r\nimport ExcelApi from \"assets/api/ExcelApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InterViewCategory from \"util/enums/InterViewCategory\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\n\r\nconst InterViewScoreContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const { getInterviewScore, getTeam } = store.ScoreStore;\r\n  const {\r\n    uploadInterview,\r\n    GetInterviewScoreExcel,\r\n    getTeamNumber,\r\n    uploadTeamNumber,\r\n  } = ExcelApi;\r\n\r\n  const [teamCount, setTeamCount] = useState<number[]>();\r\n  // 팀 수를 저장하는 useState\r\n  const [interView, setInterView] = useState<InterViewCategory>(\r\n    InterViewCategory.COOPERATION\r\n  );\r\n  // 면접 카테고리를 선택하는 useState 기본은 COOPERATION로 선택되있음\r\n  const [team, setTeam] = useState<string>(\"0\");\r\n  // 팀 선택 하는 useState\r\n  const [scoreDate, setScoreDate] = useState<InterViewScoreResponse>();\r\n  // 학생들의 점수를 저장하는 useState\r\n  const [attend, setAttend] = useState<string>(\"참석\");\r\n  // 학생들의 참석여부를 저장하는 useState\r\n  const history = useHistory();\r\n\r\n  // 팀 번호별 점수를 excel 다운받는 함수 0은 전체 팀 점수를 다운받는다.\r\n  // 전체가 선택되어있으면 team이 0이 되는데 그러면 api를 받을때 undefined를 넘겨준다\r\n  const tryDownExcel = async () => {\r\n    await GetInterviewScoreExcel(\r\n      interView,\r\n      team === \"0\" ? undefined : team\r\n    ).catch((err) => {\r\n      handleAdmin(err, history);\r\n      if (err.response?.status === 404) {\r\n        setTeam(\"0\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // 전체 팀 수를 얻어오는 함수\r\n  // 카테고리마다 팀 수가 달라서 카테고리를 선택해서 넘겨줘야함\r\n  const tryGetTeam = useCallback(async () => {\r\n    setTeam(\"0\");\r\n    await getTeam(interView)\r\n      .then((res) => {\r\n        setTeamCount(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, [interView]);\r\n\r\n  // 팀 점수 받아오는 함수\r\n  //카테고리와 팀 번호를 넘겨줘야 한다\r\n  // 팀번호가 0이면 undefined가 넘어가서 팀 전체를 조회할 수 있다.\r\n  const tryGetScore = useCallback(async () => {\r\n    await getInterviewScore(interView, team === \"0\" ? undefined : team)\r\n      .then((res) => {\r\n        setScoreDate(res);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, [interView, team, teamCount, scoreDate]);\r\n\r\n  // 카테고리 선택하는 함수\r\n  // component 보면 select로 되어있는데 거기의 값이 value가 0 또는 1로 되어있다\r\n  const selectInterView = useCallback(\r\n    (index: string) => {\r\n      if (index === \"0\") {\r\n        setInterView(InterViewCategory.COOPERATION);\r\n      } else {\r\n        setInterView(InterViewCategory.INTERVIEW);\r\n      }\r\n    },\r\n    [interView]\r\n  );\r\n\r\n  // 팀 배치 해주는 서식(excel)을 다운받는 함수\r\n  const tryGetNumberTeam = () => {\r\n    getTeamNumber(interView).catch((err) => {\r\n      handleAdmin(err, history);\r\n    });\r\n  };\r\n\r\n  // 팀 수에 맞게 학생을 재배치 한 excel 업로드 하는 함수\r\n  const tyrUploadTeam = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files && e.target.files.length) {\r\n        let file = e.target.files[0];\r\n        uploadTeamNumber(file)\r\n          .then(() => {\r\n            toast.success(\"파일 업로드 되었습니다\");\r\n            tryGetScore();\r\n            tryGetTeam();\r\n          })\r\n          .catch((err) => {\r\n            if (err.response?.status === 400) {\r\n              toast.warning(\"파일을 잘못선택하였습니다\");\r\n            } else if (err.response?.status === 500) {\r\n              toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\r\n            }\r\n          });\r\n      }\r\n    },\r\n    [tryGetScore]\r\n  );\r\n\r\n  // 면접 점수 업로드 하는 함수\r\n  const uploadFile = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files && e.target.files.length) {\r\n        let file = e.target.files[0];\r\n        uploadInterview(file)\r\n          .then(() => {\r\n            toast.success(\"파일 업로드 되었습니다\");\r\n            tryGetScore();\r\n          })\r\n          .catch((err) => {\r\n            if (err.response?.status === 400) {\r\n              toast.warning(\"파일을 잘못선택하였습니다\");\r\n            } else if (err.response?.status === 500) {\r\n              toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\r\n            }\r\n          });\r\n      }\r\n    },\r\n    [tryGetScore]\r\n  );\r\n\r\n  //참석여부 컬럼에서 참석, 미참석 선택 하는 함수\r\n  const selectAttend = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setAttend(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    tryGetTeam();\r\n  }, [interView]);\r\n\r\n  useEffect(() => {\r\n    tryGetScore();\r\n  }, [interView, team, teamCount]);\r\n\r\n  return (\r\n    <InterViewScore\r\n      team={team}\r\n      setTeam={setTeam}\r\n      teamCount={teamCount}\r\n      interView={interView}\r\n      selectInterView={selectInterView}\r\n      scoreDate={scoreDate}\r\n      tryDownExcel={tryDownExcel}\r\n      uploadFile={uploadFile}\r\n      tryGetNumberTeam={tryGetNumberTeam}\r\n      tyrUploadTeam={tyrUploadTeam}\r\n      attend={attend}\r\n      selectAttend={selectAttend}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(InterViewScoreContainer);\r\n","import React from \"react\";\r\nimport InterViewScoreContainer from \"containers/Admin/InterViewScore/InterViewScoreContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst SecondTypeScorePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <InterViewScoreContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default SecondTypeScorePage;\r\n"],"names":["_ref","children","_jsxs","_Fragment","_jsx","HeaderContainer","theme","className","NavLink","to","activeClassName","style","textAlign","display","exact","InterViewCategory","team","setTeam","teamCount","interView","selectInterView","scoreDate","tryDownExcel","uploadFile","tryGetNumberTeam","tyrUploadTeam","attend","selectAttend","onChange","e","target","value","map","i","key","onClick","htmlFor","type","id","INTERVIEW","data","examCode","userName","evaluationFactor1","evaluationFactor2","evaluationFactor3","evaluationFactor4","evaluationFactor5","evaluationFactor6","evaluationFactor7","evaluationFactor8","evaluationFactor9","evaluationFactor10","totalScore","observer","_objectDestructuringEmpty","_store$ScoreStore","useStore","store","ScoreStore","getInterviewScore","getTeam","uploadInterview","ExcelApi","GetInterviewScoreExcel","getTeamNumber","uploadTeamNumber","_useState","useState","_useState2","_slicedToArray","setTeamCount","_useState3","COOPERATION","_useState4","setInterView","_useState5","_useState6","_useState7","_useState8","setScoreDate","_useState9","_useState10","setAttend","history","useHistory","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","undefined","catch","err","_err$response","handleAdmin","response","status","stop","apply","arguments","tryGetTeam","useCallback","_callee2","_context2","then","res","tryGetScore","_callee3","_context3","index","files","length","file","toast","success","_err$response2","_err$response3","warning","error","_err$response4","_err$response5","useEffect","InterViewScore","DefaultAdminHeader","InterViewScoreContainer"],"sourceRoot":""}