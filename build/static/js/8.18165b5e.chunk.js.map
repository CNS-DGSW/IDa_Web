{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","assets/images/delete.svg","components/Admin/UserList/UserList.tsx","containers/Admin/UserList/UserListContainer.tsx","pages/AdminPage/UserListPage.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","exact","_path","_path2","_path3","_path4","_path5","_path6","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","id","height","viewBox","width","ref","d","ForwardRef","forwardRef","UserList","userStatus","cityStatus","dateStatus","schoolStatus","setSearch","search","tryDownExcel","tryChangeArrived","setId","pw","setPw","name","setName","birth","setBirth","tryAddUser","deleteUser","modal","setModal","tryChangeReview","result","Modal","onClose","placeholder","value","onChange","e","autoComplete","type","Button","onClick","style","marginTop","prev","filter","includes","cityName","schoolName","email","studentTel","map","idx","window","open","moment","format","isSubmit","isWriting","isPrintedApplicationArrived","applicationChecked","UserPrintStatus","EXPECTED","CHECKING","INCOMPLETE","SUCCEED","createdAt","date","registered","registeredRatio","writing","writingRatio","submitted","submittedRatio","observer","store","useStore","history","useHistory","AdminStore","getUserList","getAllUserRatio","adminAddUser","adminDeleteUser","StatusStore","changeArrived","changeReview","useState","setUserStatus","setCityStatus","setDateStatus","setSchoolStatus","setResult","GetUserList","ExcelApi","toast","warning","then","success","tryGetUserList","catch","err","handleAdmin","useCallback","res","data","useEffect","undefined","submiteValue","postArrivedValue","checked","forEach","tryGetAllUserRatio","userCityRatio","userDateRatio","userSchoolRatio","handleLogin","listener","document","addEventListener","removeEventListener","replace","error","userIdx","status","Swal","fire","text","showCancelButton","icon","cancelButtonText","confirmButtonText","isConfirmed","ApplicantStatusPage"],"mappings":"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","file":"static/js/8.18165b5e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 점수 관리</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>2차 전형 면접 점수</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","var _path, _path2, _path3, _path4, _path5, _path6;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgDelete = function SvgDelete(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    height: 512,\n    viewBox: \"0 0 150 150\",\n    width: 512,\n    \"data-name\": \"Layer 1\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m98.835 139h-47.67a13.048 13.048 0 0 1 -12.965-12.064l-6.275-86.936h86.15l-.075 1.072-6.2 85.864a13.048 13.048 0 0 1 -12.965 12.064zm-58.642-12.208a11.042 11.042 0 0 0 10.972 10.208h47.67a11.042 11.042 0 0 0 10.972-10.208l6.118-84.792h-81.85z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m92 25h-34v-9a5.006 5.006 0 0 1 5-5h24a5.006 5.006 0 0 1 5 5zm-32-2h30v-7a3 3 0 0 0 -3-3h-24a3 3 0 0 0 -3 3z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m120 42h-90a5.006 5.006 0 0 1 -5-5v-9a5.006 5.006 0 0 1 5-5h90a5.006 5.006 0 0 1 5 5v9a5.006 5.006 0 0 1 -5 5zm-90-17a3 3 0 0 0 -3 3v9a3 3 0 0 0 3 3h90a3 3 0 0 0 3-3v-9a3 3 0 0 0 -3-3z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m56 119.5a1 1 0 0 1 -1-1v-58a1 1 0 0 1 2 0v58a1 1 0 0 1 -1 1z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m75 119.5a1 1 0 0 1 -1-1v-58a1 1 0 0 1 2 0v58a1 1 0 0 1 -1 1z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m94 119.5a1 1 0 0 1 -1-1v-58a1 1 0 0 1 2 0v58a1 1 0 0 1 -1 1z\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDelete, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/delete.58500839.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport \"./UserList.scss\";\r\nimport { List } from \"util/types/UserList\";\r\nimport { CityRatio, DateRatio, SchoolRatio } from \"util/types/UserRatio\";\r\nimport moment from \"moment\";\r\nimport Modal from \"components/common/Modal\";\r\nimport Button from \"components/common/Button\";\r\nimport { ReactComponent as Delete } from \"assets/images/delete.svg\";\r\nimport UserPrintStatus from \"util/enums/UserPrintStatus\";\r\n\r\ninterface UserListProps {\r\n  userStatus: List[] | undefined;\r\n  cityStatus: CityRatio[];\r\n  dateStatus: DateRatio[];\r\n  schoolStatus: SchoolRatio[];\r\n  setSearch: React.Dispatch<React.SetStateAction<string>>;\r\n  search: string;\r\n  tryChangeArrived: (userIdx: number, status: boolean) => void;\r\n  tryDownExcel: () => void;\r\n  id: string;\r\n  setId: React.Dispatch<React.SetStateAction<string>>;\r\n  pw: string;\r\n  setPw: React.Dispatch<React.SetStateAction<string>>;\r\n  name: string;\r\n  setName: React.Dispatch<React.SetStateAction<string>>;\r\n  birth: string;\r\n  setBirth: React.Dispatch<React.SetStateAction<string>>;\r\n  tryAddUser: () => void;\r\n  deleteUser: (userIdx: number) => void;\r\n  modal: boolean;\r\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  tryChangeReview: (userIdx: number, status: string) => void;\r\n  result:Object;\r\n}\r\n\r\nconst UserList = ({\r\n  userStatus,\r\n  cityStatus,\r\n  dateStatus,\r\n  schoolStatus,\r\n  setSearch,\r\n  search,\r\n  tryDownExcel,\r\n  tryChangeArrived,\r\n  id,\r\n  setId,\r\n  pw,\r\n  setPw,\r\n  name,\r\n  setName,\r\n  birth,\r\n  setBirth,\r\n  tryAddUser,\r\n  deleteUser,\r\n  modal,\r\n  setModal,\r\n  tryChangeReview,\r\n  result\r\n}: UserListProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"userList\">\r\n        {modal && (\r\n          <Modal\r\n            className=\"userList-userAddModal\"\r\n            onClose={() => setModal(false)}\r\n          >\r\n            <input\r\n              placeholder=\"이메일\"\r\n              value={id}\r\n              onChange={(e) => {\r\n                setId(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"ex) 20060101\"\r\n              value={birth}\r\n              onChange={(e) => {\r\n                setBirth(e.target.value);\r\n              }}\r\n              autoComplete=\"new-password\"\r\n            />\r\n            <input\r\n              placeholder=\"비밀번호 8자리 이상\"\r\n              value={pw}\r\n              type=\"password\"\r\n              onChange={(e) => {\r\n                setPw(e.target.value);\r\n              }}\r\n            />\r\n            <Button onClick={tryAddUser} style={{ marginTop: \"1rem\" }}>\r\n              회원 추가\r\n            </Button>\r\n          </Modal>\r\n        )}\r\n        <div className=\"userList-title\">지원자 현황</div>\r\n        <div className=\"userList-search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"userList-search-input\"\r\n            placeholder=\"통합검색\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"userList-search-btn\"\r\n            onClick={() => tryDownExcel()}\r\n          >\r\n            엑셀 다운로드\r\n          </button>\r\n          <button\r\n            className=\"userList-search-btn\"\r\n            onClick={() => setModal((prev) => !prev)}\r\n          >\r\n            회원 추가\r\n          </button>\r\n        </div>\r\n        <div className=\"userList-resultWrapper\">\r\n          <table className=\"userList-list\">\r\n              <thead>\r\n                <tr className=\"userList-list-title\">\r\n                  <th>총 가입인원</th>\r\n                  <th>제출 인원</th>\r\n                  <th>우편 도착 인원</th>\r\n                  <th>검토 완료 인원</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>1</td>\r\n                  <td>1</td>\r\n                  <td>1</td>\r\n                  <td>1</td>\r\n                </tr>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"userList-subtitle\">\r\n          사용자 이름을 클릭 시 원서 수정을 할 수 있습니다.\r\n        </div>\r\n        <table className=\"userList-list\">\r\n          <thead>\r\n            <tr className=\"userList-list-title\">\r\n              <th>순번</th>\r\n              <th>성명</th>\r\n              <th>아이디</th>\r\n              <th>출신학교</th>\r\n              <th>지역</th>\r\n              <th>생년월일</th>\r\n              <th>연락처</th>\r\n              <th>원서작성</th>\r\n              <th>원서제출</th>\r\n              <th>우편 도착 여부</th>\r\n              <th>서류 검토</th>\r\n              <th>가입날짜</th>\r\n              <th>삭제</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {search\r\n              ? userStatus &&\r\n                userStatus\r\n                  .filter(\r\n                    (name) =>\r\n                      (typeof name.name === \"string\" &&\r\n                        name.name.includes(search)) ||\r\n                      (typeof name.cityName === \"string\" &&\r\n                        name.cityName.includes(search)) ||\r\n                      (typeof name.schoolName === \"string\" &&\r\n                        name.schoolName.includes(search)) ||\r\n                      (typeof name.email === \"string\" &&\r\n                        name.email.includes(search)) ||\r\n                      (typeof name.studentTel === \"string\" &&\r\n                        name.studentTel.includes(search))\r\n                  )\r\n                  .map((filter, idx) => (\r\n                    <tr key={idx}>\r\n                      <td>{idx + 1}</td>\r\n                      <td\r\n                        className=\"pointer\"\r\n                        onClick={() =>\r\n                          window.open(`/write?userIdx=${filter.idx}`)\r\n                        }\r\n                      >\r\n                        {filter.name}\r\n                      </td>\r\n                      <td>\r\n                        {filter.email === null ? (\r\n                          <>지정안됨</>\r\n                        ) : (\r\n                          <>{filter.email}</>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {filter.schoolName === null ? (\r\n                          <>지정안됨</>\r\n                        ) : (\r\n                          <>{filter.schoolName}</>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {filter.cityName === null ? (\r\n                          <>지정안됨</>\r\n                        ) : (\r\n                          <>{filter.cityName}</>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {filter.birth === null ? (\r\n                          <>지정안됨</>\r\n                        ) : (\r\n                          <>{moment(filter.birth).format(\"YYYY-MM-DD\")}</>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {filter.studentTel === null ? (\r\n                          <>지정안됨</>\r\n                        ) : (\r\n                          <>{filter.studentTel}</>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {filter.isSubmit && !filter.isWriting\r\n                          ? \"작성불가\"\r\n                          : filter.isWriting\r\n                          ? \"작성\"\r\n                          : \"미작성\"}\r\n                      </td>\r\n                      <td>{filter.isSubmit ? \"제출완료\" : \"미제출\"}</td>\r\n                      <td>\r\n                        {filter.isPrintedApplicationArrived ? (\r\n                          <>\r\n                            <button\r\n                              className=\"true pointer\"\r\n                              onClick={() =>\r\n                                tryChangeArrived(\r\n                                  filter.idx,\r\n                                  !filter.isPrintedApplicationArrived\r\n                                )\r\n                              }\r\n                            >\r\n                              도착\r\n                            </button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <button\r\n                              className=\"false pointer\"\r\n                              onClick={() =>\r\n                                tryChangeArrived(\r\n                                  filter.idx,\r\n                                  !filter.isPrintedApplicationArrived\r\n                                )\r\n                              }\r\n                            >\r\n                              미도착\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <select\r\n                          value={filter.applicationChecked}\r\n                          onChange={(e) =>\r\n                            tryChangeReview(filter.idx, e.target.value)\r\n                          }\r\n                        >\r\n                          <option value={UserPrintStatus.EXPECTED}>\r\n                            검토예정\r\n                          </option>\r\n                          <option value={UserPrintStatus.CHECKING}>\r\n                            검토중\r\n                          </option>\r\n                          <option value={UserPrintStatus.INCOMPLETE}>\r\n                            서류미비\r\n                          </option>\r\n                          <option value={UserPrintStatus.SUCCEED}>\r\n                            검토완료\r\n                          </option>\r\n                        </select>\r\n                      </td>\r\n                      <td>{moment(filter.createdAt).format(\"YYYY-MM-DD\")}</td>\r\n                      <td className=\"deleteIcon\">\r\n                        <Delete onClick={() => deleteUser(filter.idx)} />\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n              : userStatus?.map((i, idx) => (\r\n                  <tr key={idx}>\r\n                    <td>{idx + 1}</td>\r\n                    <td\r\n                      onClick={() => window.open(`/write?userIdx=${i.idx}`)}\r\n                      className=\"pointer\"\r\n                    >\r\n                      {i.name}\r\n                    </td>\r\n                    <td>{i.email === null ? <>지정안됨</> : <>{i.email}</>}</td>\r\n                    <td>\r\n                      {i.schoolName === null ? (\r\n                        <>지정안됨</>\r\n                      ) : (\r\n                        <>{i.schoolName}</>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {i.cityName === null ? <>지정안됨</> : <>{i.cityName}</>}\r\n                    </td>\r\n                    <td>\r\n                      {i.birth === null ? (\r\n                        <>지정안됨</>\r\n                      ) : (\r\n                        <>{moment(i.birth).format(\"YYYY-MM-DD\")}</>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {i.studentTel === null ? (\r\n                        <>지정안됨</>\r\n                      ) : (\r\n                        <>{i.studentTel}</>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {i.isSubmit && !i.isWriting\r\n                        ? \"작성불가\"\r\n                        : i.isWriting\r\n                        ? \"작성\"\r\n                        : \"미작성\"}\r\n                    </td>\r\n                    <td>{i.isSubmit ? \"제출완료\" : \"미제출\"}</td>\r\n                    <td>\r\n                      {i.isPrintedApplicationArrived ? (\r\n                        <>\r\n                          <button\r\n                            className=\"true pointer\"\r\n                            onClick={() =>\r\n                              tryChangeArrived(\r\n                                i.idx,\r\n                                !i.isPrintedApplicationArrived\r\n                              )\r\n                            }\r\n                          >\r\n                            도착\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <button\r\n                            className=\"false pointer\"\r\n                            onClick={() =>\r\n                              tryChangeArrived(\r\n                                i.idx,\r\n                                !i.isPrintedApplicationArrived\r\n                              )\r\n                            }\r\n                          >\r\n                            미도착\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <select\r\n                        value={i.applicationChecked}\r\n                        onChange={(e) => tryChangeReview(i.idx, e.target.value)}\r\n                      >\r\n                        <option value={UserPrintStatus.EXPECTED}>\r\n                          검토예정\r\n                        </option>\r\n                        <option value={UserPrintStatus.CHECKING}>검토중</option>\r\n                        <option value={UserPrintStatus.INCOMPLETE}>\r\n                          서류미비\r\n                        </option>\r\n                        <option value={UserPrintStatus.SUCCEED}>\r\n                          검토완료\r\n                        </option>\r\n                      </select>\r\n                    </td>\r\n                    <td>{moment(i.createdAt).format(\"YYYY-MM-DD\")}</td>\r\n                    <td className=\"deleteIcon\">\r\n                      <Delete onClick={() => deleteUser(i.idx)} />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"allRatio\">\r\n        <div>\r\n          <table className=\"allRatio-list\">\r\n            <thead>\r\n              <tr className=\"allRatio-list-title\">\r\n                <th>날짜</th>\r\n                <th>가입</th>\r\n                <th>비율</th>\r\n                <th>작성</th>\r\n                <th>비율</th>\r\n                <th>제출</th>\r\n                <th>비율</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dateStatus.map((i, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{i.date}</td>\r\n                  <td>{i.registered}</td>\r\n                  <td>{i.registeredRatio}</td>\r\n                  <td>{i.writing}</td>\r\n                  <td>{i.writingRatio}</td>\r\n                  <td>{i.submitted}</td>\r\n                  <td>{i.submittedRatio}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          <table className=\"allRatio-list\">\r\n            <thead>\r\n              <tr className=\"allRatio-list-title\">\r\n                <th>출신중학교</th>\r\n                <th>가입</th>\r\n                <th>비율</th>\r\n                <th>작성</th>\r\n                <th>비율</th>\r\n                <th>제출</th>\r\n                <th>비율</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {schoolStatus.map((i, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{i.schoolName}</td>\r\n                  <td>{i.registered}</td>\r\n                  <td>{i.registeredRatio}</td>\r\n                  <td>{i.writing}</td>\r\n                  <td>{i.writingRatio}</td>\r\n                  <td>{i.submitted}</td>\r\n                  <td>{i.submittedRatio}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          <table className=\"allRatio-list\">\r\n            <thead>\r\n              <tr className=\"allRatio-list-title\">\r\n                <th>지역</th>\r\n                <th>가입</th>\r\n                <th>비율</th>\r\n                <th>작성</th>\r\n                <th>비율</th>\r\n                <th>제출</th>\r\n                <th>비율</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {cityStatus.map((i, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{i.cityName}</td>\r\n                  <td>{i.registered}</td>\r\n                  <td>{i.registeredRatio}</td>\r\n                  <td>{i.writing}</td>\r\n                  <td>{i.writingRatio}</td>\r\n                  <td>{i.submitted}</td>\r\n                  <td>{i.submittedRatio}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport UserListComponent from \"components/Admin/UserList\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { List } from \"util/types/UserList\";\r\nimport { handleAdmin, handleLogin } from \"lib/handleErrors\";\r\nimport { CityRatio, DateRatio, SchoolRatio } from \"util/types/UserRatio\";\r\nimport ExcelApi from \"assets/api/ExcelApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\nimport UserPrintStatus from \"util/enums/UserPrintStatus\";\r\n\r\nconst UserListContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const history = useHistory();\r\n\r\n  const { getUserList, getAllUserRatio, adminAddUser, adminDeleteUser } =\r\n    store.AdminStore;\r\n\r\n  const { changeArrived, changeReview } = store.StatusStore;\r\n\r\n  const [userStatus, setUserStatus] = useState<List[]>();\r\n  const [cityStatus, setCityStatus] = useState<CityRatio[]>([]);\r\n  const [dateStatus, setDateStatus] = useState<DateRatio[]>([]);\r\n  const [schoolStatus, setSchoolStatus] = useState<SchoolRatio[]>([]);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const [id, setId] = useState<string>(\"\");\r\n  const [pw, setPw] = useState<string>(\"\");\r\n  const [birth, setBirth] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [modal, setModal] = useState<boolean>(false);\r\n\r\n  const [result,setResult] = useState<Object>({\r\n    \"총가입인원\":0,\r\n    \"제출인원\":0,\r\n    \"우편도착인원\":0,\r\n    \"검토완료인원\":0,\r\n  });\r\n\r\n  const { GetUserList } = ExcelApi;\r\n\r\n  const tryAddUser = () => {\r\n    if (!id || !pw || !birth || !name) {\r\n      toast.warning(\"빈칸이 있습니다.\");\r\n    } else if (pw.length < 8) {\r\n      toast.warning(\"비밀번호는 8자리 이상이여야 합니다.\");\r\n    } else {\r\n      adminAddUser(id, name, pw, birth)\r\n        .then(() => {\r\n          toast.success(\"회원이 추가되었습니다.\");\r\n          tryGetUserList();\r\n        })\r\n        .catch((err) => {\r\n          handleAdmin(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteUser = (userIdx: number) => {\r\n    Swal.fire({\r\n      title: \"삭제하시겠습니까?\",\r\n      text: \"회원 정보는 사라집니다.\",\r\n      showCancelButton: true,\r\n      icon: \"warning\",\r\n      cancelButtonText: \"취소\",\r\n      confirmButtonText: \"확인\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        adminDeleteUser(userIdx)\r\n          .then(() => {\r\n            toast.success(\"회원이 삭제되었습니다.\");\r\n            tryGetUserList();\r\n          })\r\n          .catch((err) => {\r\n            handleAdmin(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  // 지원자 현황 받아오기\r\n  const tryGetUserList = useCallback(() => {\r\n    getUserList()\r\n      .then((res) => {\r\n        setUserStatus(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userStatus !== undefined){\r\n      let submiteValue:number=0;\r\n      let postArrivedValue:number=0;\r\n      let checked:number=0;\r\n\r\n      userStatus.forEach((i) => {\r\n        // 제출 인원\r\n        if (i.isSubmit) {submiteValue++}\r\n        if (i.isPrintedApplicationArrived) {postArrivedValue++}\r\n        if (i.applicationChecked === \"SUCCEED\") {checked++}\r\n      })\r\n\r\n        setResult({\r\n          \"총가입인원\":userStatus.length,\r\n          \"제출인원\":submiteValue,\r\n          \"우편도착인원\":postArrivedValue,\r\n          \"검토완료인원\":checked,\r\n      })\r\n    }\r\n\r\n  },[userStatus])\r\n\r\n  // 날짜, 출신학교, 지역 별 비율 받아오기\r\n  const tryGetAllUserRatio = useCallback(() => {\r\n    getAllUserRatio()\r\n      .then((res) => {\r\n        setCityStatus(res.data.userCityRatio);\r\n        setDateStatus(res.data.userDateRatio);\r\n        setSchoolStatus(res.data.userSchoolRatio);\r\n      })\r\n      .catch((err) => {\r\n        handleLogin(err, history);\r\n      });\r\n  }, []);\r\n\r\n  // 최종 원서 도착 또는 미도착 변경\r\n  const tryChangeArrived = (userIdx: number, status: boolean) => {\r\n    changeArrived(userIdx, status).then(() => {\r\n      tryGetUserList();\r\n    });\r\n  };\r\n\r\n  //최종 원서 검토 예정 또는 검토 완료 변경 이민욱 만듬\r\n  const tryChangeReview = (userIdx: number, status: string) => {\r\n    changeReview(userIdx, status).then(() => {\r\n      tryGetUserList();\r\n    });\r\n  };\r\n\r\n  // 엑셀 다운\r\n  const tryDownExcel = () => {\r\n    GetUserList().catch((err) => {\r\n      toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const listener = (e: KeyboardEvent) => {\r\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n        tryAddUser();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, [name, id, pw, birth]);\r\n\r\n  useEffect(() => {\r\n    tryGetUserList();\r\n  }, [tryGetUserList]);\r\n\r\n  useEffect(() => {\r\n    tryGetAllUserRatio();\r\n  }, [tryGetAllUserRatio]);\r\n\r\n  useEffect(() => {\r\n    if (birth) {\r\n      setBirth(\r\n        birth.replace(/-/g, \"\").replace(/(\\d{4})(\\d{2})(\\d{2})/, \"$1-$2-$3\")\r\n      );\r\n    }\r\n  }, [birth]);\r\n\r\n  return (\r\n    <UserListComponent\r\n      search={search}\r\n      setSearch={setSearch}\r\n      dateStatus={dateStatus}\r\n      schoolStatus={schoolStatus}\r\n      cityStatus={cityStatus}\r\n      userStatus={userStatus}\r\n      tryDownExcel={tryDownExcel}\r\n      tryChangeArrived={tryChangeArrived}\r\n      id={id}\r\n      setId={setId}\r\n      pw={pw}\r\n      setPw={setPw}\r\n      name={name}\r\n      setName={setName}\r\n      birth={birth}\r\n      setBirth={setBirth}\r\n      tryAddUser={tryAddUser}\r\n      deleteUser={deleteUser}\r\n      modal={modal}\r\n      setModal={setModal}\r\n      tryChangeReview={tryChangeReview}\r\n      result={result}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(UserListContainer);\r\n","import React from \"react\";\r\nimport UserListContainer from \"containers/Admin/UserList/UserListContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\nconst ApplicantStatusPage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <UserListContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default ApplicantStatusPage;\r\n"],"sourceRoot":""}