{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","util/enums/InterViewCategory.ts","components/Admin/InterViewScore/InterViewScore.tsx","containers/Admin/InterViewScore/InterViewScoreContainer.tsx","pages/AdminPage/InterViewScorePage.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","style","textAlign","display","exact","InterViewCategory","InterViewScore","team","setTeam","teamCount","interView","selectInterView","scoreDate","tryDownExcel","uploadFile","tryGetNumberTeam","tyrUploadTeam","attend","selectAttend","onChange","e","target","value","map","i","key","onClick","htmlFor","type","id","INTERVIEW","data","examCode","userName","evaluationFactor1","evaluationFactor2","evaluationFactor3","evaluationFactor4","evaluationFactor5","evaluationFactor6","evaluationFactor7","evaluationFactor8","evaluationFactor9","evaluationFactor10","totalScore","observer","useStore","store","ScoreStore","getInterviewScore","getTeam","uploadInterview","ExcelApi","GetInterviewScoreExcel","getTeamNumber","uploadTeamNumber","useState","setTeamCount","COOPERATION","setInterView","setScoreDate","setAttend","history","useHistory","a","undefined","catch","err","handleAdmin","response","status","tryGetTeam","useCallback","then","res","tryGetScore","index","files","length","file","toast","success","warning","error","useEffect","SecondTypeScorePage"],"mappings":"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","file":"static/js/5.83d89dfd.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./DefaultAdminHeader.scss\";\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\n\ninterface DefaultAdminHeaderProps {\n  children: React.ReactNode;\n}\n\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\n  return (\n    <>\n      <HeaderContainer theme={true} />\n      <div className=\"Admin\">\n        <div className=\"Admin-header\">\n          <NavLink\n            to=\"/admin/userList\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>지원자 현황</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/schoolCity\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>출신교별 현황</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/userRate\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>입학지원자경쟁률</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/receiptStatus\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>신입생 입학 전형 원부</span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/detailScore\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\n              2차 전형 점수 관리 <br></br>(sw 역량, 직무능력, 코딩테스트)\n            </span>\n          </NavLink>\n          <NavLink\n            to=\"/admin/interviewScore\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\n              2차 전형 면접 점수\n              <br />\n              (창의협업, 구술면접)\n            </span>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/admin/secondScore\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>2차 전형 점수 관리</span>\n          </NavLink>\n\n          <NavLink\n            to=\"/admin/userListPassed\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>1차/최종 합격 여부</span>\n          </NavLink>\n\n          <NavLink\n            to=\"/admin/userResultPage\"\n            className=\"Admin-header-link\"\n            activeClassName=\"Admin-header-link-active\"\n          >\n            <span>결과 변경</span>\n          </NavLink>\n        </div>\n      </div>\n      {children}\n    </>\n  );\n};\n\nexport default DefaultAdminHeader;\n","enum InterViewCategory {\n  INTERVIEW = \"INTERVIEW\",\n  // 그룹면접\n  COOPERATION = \"COOPERATION\",\n  // 심층면접\n}\nexport default InterViewCategory;\n","import React from \"react\";\nimport \"./InterViewScore.scss\";\nimport { InterViewScoreResponse } from \"util/types/Response\";\nimport InterViewCategory from \"util/enums/InterViewCategory\";\n\ninterface InterViewScoreProps {\n  team: string;\n  setTeam: React.Dispatch<React.SetStateAction<string>>;\n  teamCount: number[] | undefined;\n  selectInterView: (index: string) => void;\n  scoreDate: InterViewScoreResponse | undefined;\n  tryDownExcel: () => void;\n  uploadFile: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  interView: InterViewCategory;\n  tryGetNumberTeam: () => void;\n  tyrUploadTeam: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  attend: string;\n  selectAttend: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nconst InterViewScore = ({\n  team,\n  setTeam,\n  teamCount,\n  interView,\n  selectInterView,\n  scoreDate,\n  tryDownExcel,\n  uploadFile,\n  tryGetNumberTeam,\n  tyrUploadTeam,\n  attend,\n  selectAttend,\n}: InterViewScoreProps) => {\n  return (\n    <div className=\"InterViewScore\">\n      <span className=\"InterViewScore-title\">\n        2차전형 (창의 협업, 구술 면접) 점수\n      </span>\n      <div className=\"InterViewScore-checkBox\">\n        <select\n          className=\"InterViewScore-checkBox-s-op\"\n          onChange={(e) => {\n            selectInterView(e.target.value);\n          }}\n        >\n          <option value=\"0\" className=\"InterViewScore-checkBox-s-op\">\n            {/* 그룹면접 */}\n            창의 협업\n          </option>\n          <option value=\"1\" className=\"InterViewScore-checkBox-s-op\">\n            {/* 심층면접 */}\n            구술면접\n          </option>\n        </select>\n        <select\n          className=\"InterViewScore-checkBox-s-op\"\n          onChange={(e) => {\n            setTeam(e.target.value);\n          }}\n          value={team}\n        >\n          <option className=\"InterViewScore-checkBox-s-op\" value=\"0\">\n            전체\n          </option>\n          {teamCount &&\n            teamCount.map((i, key) => (\n              <option key={key} value={i}>\n                {i}팀\n              </option>\n            ))}\n        </select>\n\n        <div className=\"InterViewScore-checkBox-label\">\n          <span>팀 번호 서식 다운로드</span>\n          <button onClick={() => tryGetNumberTeam()} className=\"buttons\">\n            다운로드\n          </button>\n        </div>\n\n        <div className=\"InterViewScore-checkBox-label\">\n          <span>팀 번호 서식 업로드</span>\n          <label htmlFor=\"input-file2\" className=\"buttons\">\n            업로드\n          </label>\n          <input\n            type=\"file\"\n            id=\"input-file2\"\n            className=\"input-file\"\n            onChange={(e) => tyrUploadTeam(e)}\n          />\n        </div>\n\n        <div className=\"InterViewScore-checkBox-label\">\n          <span>출력용 &amp; 서식</span>\n          <button onClick={() => tryDownExcel()} className=\"buttons\">\n            다운로드\n          </button>\n        </div>\n\n        <div className=\"InterViewScore-checkBox-label\">\n          <span>\n            {interView === InterViewCategory.INTERVIEW\n              ? \"구술 면접 점수\"\n              : \"창의 협업 점수\"}\n          </span>\n          <label htmlFor=\"input-file1\" className=\"buttons\">\n            업로드\n          </label>\n          <input\n            type=\"file\"\n            id=\"input-file1\"\n            className=\"input-file\"\n            onChange={(e) => uploadFile(e)}\n          />\n        </div>\n      </div>\n      <div className=\"InterViewScore-table\">\n        <table className=\"InterViewScore-table-list\">\n          <thead>\n            <tr className=\"InterViewScore-table-list-title\">\n              <th>순번</th>\n              <th>수험번호</th>\n              <th>이름</th>\n              <th>참석여부</th>\n              <th>평가요소1</th>\n              <th>평가요소2</th>\n              <th>평가요소3</th>\n              <th>평가요소4</th>\n              <th>평가요소5</th>\n              {interView === InterViewCategory.INTERVIEW && (\n                <>\n                  <th>평가요소6</th>\n                  <th>평가요소7</th>\n                  <th>평가요소8</th>\n                  <th>평가요소9</th>\n                  <th>평가요소10</th>\n                </>\n              )}\n              {/* <th>평가요소 합산점수</th> */}\n              <th>\n                {\" \"}\n                {interView === InterViewCategory.INTERVIEW\n                  ? \"총점\"\n                  : \"전형별 창의 협업 점수\"}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {scoreDate?.data.map((i, key) => (\n              <tr key={key}>\n                <td>{key + 1}</td>\n                <td>{i.examCode}</td>\n                <td>{i.userName}</td>\n                {/* <td>{i.isAttend ? \"참석\" : \"미참석\"}</td> */}\n                <td>\n                  <select value={attend} onChange={(e) => selectAttend(e)}>\n                    <option>참석</option>\n                    <option>미참석</option>\n                  </select>\n                </td>\n                <td>{i.evaluationFactor1}</td>\n                <td>{i.evaluationFactor2}</td>\n                <td>{i.evaluationFactor3}</td>\n                <td>{i.evaluationFactor4}</td>\n                <td>{i.evaluationFactor5}</td>\n                {interView === InterViewCategory.INTERVIEW && (\n                  <>\n                    <td>{i.evaluationFactor6}</td>\n                    <td>{i.evaluationFactor7}</td>\n                    <td>{i.evaluationFactor8}</td>\n                    <td>{i.evaluationFactor9}</td>\n                    <td>{i.evaluationFactor10}</td>\n                  </>\n                )}\n                {/* <td>\n                  {i.evaluationFactor1 +\n                    i.evaluationFactor2 +\n                    i.evaluationFactor3 +\n                    i.evaluationFactor4 +\n                    i.evaluationFactor5 +\n                    (i.evaluationFactor6 !== null ? i.evaluationFactor6 : 0) +\n                    (i.evaluationFactor7 !== null ? i.evaluationFactor7 : 0) +\n                    (i.evaluationFactor8 !== null ? i.evaluationFactor8 : 0)}\n                </td> */}\n                <td>{i.totalScore}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default InterViewScore;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport InterViewScore from \"components/Admin/InterViewScore\";\nimport useStore from \"lib/hooks/useStore\";\nimport { InterViewScoreResponse } from \"util/types/Response\";\nimport ExcelApi from \"assets/api/ExcelApi\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport InterViewCategory from \"util/enums/InterViewCategory\";\nimport { handleAdmin } from \"lib/handleErrors\";\n\nconst InterViewScoreContainer = ({}) => {\n  const { store } = useStore();\n  const { getInterviewScore, getTeam } = store.ScoreStore;\n  const {\n    uploadInterview,\n    GetInterviewScoreExcel,\n    getTeamNumber,\n    uploadTeamNumber,\n  } = ExcelApi;\n\n  const [teamCount, setTeamCount] = useState<number[]>();\n  // 팀 수를 저장하는 useState\n  const [interView, setInterView] = useState<InterViewCategory>(\n    InterViewCategory.COOPERATION\n  );\n  // 면접 카테고리를 선택하는 useState 기본은 COOPERATION로 선택되있음\n  const [team, setTeam] = useState<string>(\"0\");\n  // 팀 선택 하는 useState\n  const [scoreDate, setScoreDate] = useState<InterViewScoreResponse>();\n  // 학생들의 점수를 저장하는 useState\n  const [attend, setAttend] = useState<string>(\"참석\");\n  // 학생들의 참석여부를 저장하는 useState\n  const history = useHistory();\n\n  // 팀 번호별 점수를 excel 다운받는 함수 0은 전체 팀 점수를 다운받는다.\n  // 전체가 선택되어있으면 team이 0이 되는데 그러면 api를 받을때 undefined를 넘겨준다\n  const tryDownExcel = async () => {\n    await GetInterviewScoreExcel(\n      interView,\n      team === \"0\" ? undefined : team\n    ).catch((err) => {\n      handleAdmin(err, history);\n      if (err.response?.status === 404) {\n        setTeam(\"0\");\n      }\n    });\n  };\n\n  // 전체 팀 수를 얻어오는 함수\n  // 카테고리마다 팀 수가 달라서 카테고리를 선택해서 넘겨줘야함\n  const tryGetTeam = useCallback(async () => {\n    setTeam(\"0\");\n    await getTeam(interView)\n      .then((res) => {\n        setTeamCount(res.data);\n      })\n      .catch((err) => {\n        handleAdmin(err, history);\n      });\n  }, [interView]);\n\n  // 팀 점수 받아오는 함수\n  //카테고리와 팀 번호를 넘겨줘야 한다\n  // 팀번호가 0이면 undefined가 넘어가서 팀 전체를 조회할 수 있다.\n  const tryGetScore = useCallback(async () => {\n    await getInterviewScore(interView, team === \"0\" ? undefined : team)\n      .then((res) => {\n        setScoreDate(res);\n      })\n      .catch((err) => {\n        handleAdmin(err, history);\n      });\n  }, [interView, team, teamCount, scoreDate]);\n\n  // 카테고리 선택하는 함수\n  // component 보면 select로 되어있는데 거기의 값이 value가 0 또는 1로 되어있다\n  const selectInterView = useCallback(\n    (index: string) => {\n      if (index === \"0\") {\n        setInterView(InterViewCategory.COOPERATION);\n      } else {\n        setInterView(InterViewCategory.INTERVIEW);\n      }\n    },\n    [interView]\n  );\n\n  // 팀 배치 해주는 서식(excel)을 다운받는 함수\n  const tryGetNumberTeam = () => {\n    getTeamNumber(interView).catch((err) => {\n      handleAdmin(err, history);\n    });\n  };\n\n  // 팀 수에 맞게 학생을 재배치 한 excel 업로드 하는 함수\n  const tyrUploadTeam = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files && e.target.files.length) {\n        let file = e.target.files[0];\n        uploadTeamNumber(file)\n          .then(() => {\n            toast.success(\"파일 업로드 되었습니다\");\n            tryGetScore();\n            tryGetTeam();\n          })\n          .catch((err) => {\n            if (err.response?.status === 400) {\n              toast.warning(\"파일을 잘못선택하였습니다\");\n            } else if (err.response?.status === 500) {\n              toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\n            }\n          });\n      }\n    },\n    [tryGetScore]\n  );\n\n  // 면접 점수 업로드 하는 함수\n  const uploadFile = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files && e.target.files.length) {\n        let file = e.target.files[0];\n        uploadInterview(file)\n          .then(() => {\n            toast.success(\"파일 업로드 되었습니다\");\n            tryGetScore();\n          })\n          .catch((err) => {\n            if (err.response?.status === 400) {\n              toast.warning(\"파일을 잘못선택하였습니다\");\n            } else if (err.response?.status === 500) {\n              toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\n            }\n          });\n      }\n    },\n    [tryGetScore]\n  );\n\n  //참석여부 컬럼에서 참석, 미참석 선택 하는 함수\n  const selectAttend = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setAttend(e.target.value);\n  };\n\n  useEffect(() => {\n    tryGetTeam();\n  }, [interView]);\n\n  useEffect(() => {\n    tryGetScore();\n  }, [interView, team, teamCount]);\n\n  return (\n    <InterViewScore\n      team={team}\n      setTeam={setTeam}\n      teamCount={teamCount}\n      interView={interView}\n      selectInterView={selectInterView}\n      scoreDate={scoreDate}\n      tryDownExcel={tryDownExcel}\n      uploadFile={uploadFile}\n      tryGetNumberTeam={tryGetNumberTeam}\n      tyrUploadTeam={tyrUploadTeam}\n      attend={attend}\n      selectAttend={selectAttend}\n    />\n  );\n};\n\nexport default observer(InterViewScoreContainer);\n","import React from \"react\";\nimport InterViewScoreContainer from \"containers/Admin/InterViewScore/InterViewScoreContainer\";\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\n\nconst SecondTypeScorePage = () => {\n  return (\n    <DefaultAdminHeader>\n      <InterViewScoreContainer />\n    </DefaultAdminHeader>\n  );\n};\n\nexport default SecondTypeScorePage;\n"],"sourceRoot":""}