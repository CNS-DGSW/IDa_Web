{"version":3,"sources":["components/Admin/DefaultAdminHeader/DefaultAdminHeader.tsx","util/enums/InterViewCategory.ts","components/Admin/InterViewScore/InterViewScore.tsx","containers/Admin/InterViewScore/InterViewScoreContainer.tsx","pages/AdminPage/InterViewScorePage.tsx"],"names":["DefaultAdminHeader","children","HeaderContainer","theme","className","to","activeClassName","exact","style","textAlign","display","InterViewCategory","InterViewScore","team","setTeam","teamCount","interView","selectInterView","scoreDate","tryDownExcel","uploadFile","tryGetNumberTeam","tyrUploadTeam","onChange","e","target","value","map","i","key","onClick","htmlFor","type","id","INTERVIEW","data","examCode","userName","isAttend","evaluationFactor1","evaluationFactor2","evaluationFactor3","evaluationFactor4","evaluationFactor5","evaluationFactor6","evaluationFactor7","evaluationFactor8","calcScore","observer","useStore","store","ScoreStore","getInterviewScore","getTeam","uploadInterview","ExcelApi","GetInterviewScoreExcel","getTeamNumber","uploadTeamNumber","useState","setTeamCount","COOPERATION","setInterView","setScoreDate","history","useHistory","a","undefined","catch","err","handleAdmin","response","status","tryGetTeam","useCallback","then","res","tryGetScore","index","files","length","file","toast","success","warning","error","useEffect","SecondTypeScorePage"],"mappings":"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","file":"static/js/5.eb312113.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DefaultAdminHeader.scss\";\r\nimport HeaderContainer from \"containers/Header/HeaderContainer\";\r\n\r\ninterface DefaultAdminHeaderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultAdminHeader = ({ children }: DefaultAdminHeaderProps) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer theme={true} />\r\n      <div className=\"Admin\">\r\n        <div className=\"Admin-header\">\r\n          <NavLink\r\n            to=\"/admin/userList\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>지원자 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/schoolCity\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>출신교별 현황</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/userRate\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>입학지원자경쟁률</span>\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/admin/receiptStatus\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>신입생 입학 전형 원부</span>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/admin/secondScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 점수 관리\r\n              <br />\r\n              (SW역량, 직무능력, 코딩테스트)\r\n            </span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/interviewScore\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span style={{ textAlign: \"center\", display: \"flex\" }}>\r\n              2차 전형 면접 점수\r\n              <br />\r\n              (창의협업, 구술면접)\r\n            </span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userListPassed\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>1차/최종 합격 여부</span>\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/admin/userResultPage\"\r\n            className=\"Admin-header-link\"\r\n            activeClassName=\"Admin-header-link-active\"\r\n          >\r\n            <span>결과 변경</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultAdminHeader;\r\n","enum InterViewCategory {\r\n  INTERVIEW = \"INTERVIEW\",\r\n  // 그룹면접\r\n  COOPERATION = \"COOPERATION\",\r\n  // 심층면접\r\n}\r\nexport default InterViewCategory;\r\n","import React from \"react\";\r\nimport \"./InterViewScore.scss\";\r\nimport { InterViewScoreResponse } from \"util/types/Response\";\r\nimport InterViewCategory from \"util/enums/InterViewCategory\";\r\n\r\ninterface InterViewScoreProps {\r\n  team: string;\r\n  setTeam: React.Dispatch<React.SetStateAction<string>>;\r\n  teamCount: number[] | undefined;\r\n  selectInterView: (index: string) => void;\r\n  scoreDate: InterViewScoreResponse | undefined;\r\n  tryDownExcel: () => void;\r\n  uploadFile: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  interView: InterViewCategory;\r\n  tryGetNumberTeam: () => void;\r\n  tyrUploadTeam: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst InterViewScore = ({\r\n  team,\r\n  setTeam,\r\n  teamCount,\r\n  interView,\r\n  selectInterView,\r\n  scoreDate,\r\n  tryDownExcel,\r\n  uploadFile,\r\n  tryGetNumberTeam,\r\n  tyrUploadTeam,\r\n}: InterViewScoreProps) => {\r\n  return (\r\n    <div className=\"InterViewScore\">\r\n      <span className=\"InterViewScore-title\">\r\n        2차전형 (창의 협업, 구술 면접) 점수\r\n      </span>\r\n      <div className=\"InterViewScore-checkBox\">\r\n        <select\r\n          className=\"InterViewScore-checkBox-s-op\"\r\n          onChange={(e) => {\r\n            selectInterView(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"0\" className=\"InterViewScore-checkBox-s-op\">\r\n            {/* 그룹면접 */}\r\n            창의 협업\r\n          </option>\r\n          <option value=\"1\" className=\"InterViewScore-checkBox-s-op\">\r\n            {/* 심층면접 */}\r\n            구술면접\r\n          </option>\r\n        </select>\r\n        <select\r\n          className=\"InterViewScore-checkBox-s-op\"\r\n          onChange={(e) => {\r\n            setTeam(e.target.value);\r\n          }}\r\n          value={team}\r\n        >\r\n          <option className=\"InterViewScore-checkBox-s-op\" value=\"0\">\r\n            전체\r\n          </option>\r\n          {teamCount &&\r\n            teamCount.map((i, key) => (\r\n              <option key={key} value={i}>\r\n                {i}팀\r\n              </option>\r\n            ))}\r\n        </select>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>팀 번호 서식 다운로드</span>\r\n          <button onClick={() => tryGetNumberTeam()} className=\"buttons\">\r\n            다운로드\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>팀 번호 서식 업로드</span>\r\n          <label htmlFor=\"input-file2\" className=\"buttons\">\r\n            업로드\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"input-file2\"\r\n            className=\"input-file\"\r\n            onChange={(e) => tyrUploadTeam(e)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>출력용 &amp; 서식</span>\r\n          <button onClick={() => tryDownExcel()} className=\"buttons\">\r\n            다운로드\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"InterViewScore-checkBox-label\">\r\n          <span>\r\n            {interView === InterViewCategory.INTERVIEW\r\n              ? \"구술 면접 점수\"\r\n              : \"창의 협업 점수\"}\r\n          </span>\r\n          <label htmlFor=\"input-file1\" className=\"buttons\">\r\n            업로드\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"input-file1\"\r\n            className=\"input-file\"\r\n            onChange={(e) => uploadFile(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"InterViewScore-table\">\r\n        <table className=\"InterViewScore-table-list\">\r\n          <thead>\r\n            <tr className=\"InterViewScore-table-list-title\">\r\n              <th>순번</th>\r\n              <th>수험번호</th>\r\n              <th>이름</th>\r\n              <th>참석여부</th>\r\n              <th>평가요소1</th>\r\n              <th>평가요소2</th>\r\n              <th>평가요소3</th>\r\n              <th>평가요소4</th>\r\n              <th>평가요소5</th>\r\n              {interView === InterViewCategory.INTERVIEW && (\r\n                <>\r\n                  <th>평가요소6</th>\r\n                  <th>평가요소7</th>\r\n                  <th>평가요소8</th>\r\n                </>\r\n              )}\r\n              <th>평가요소 합산점수</th>\r\n              <th>\r\n                {\" \"}\r\n                {interView === InterViewCategory.INTERVIEW\r\n                  ? \"전형별 구술 면접 점수\"\r\n                  : \"전형별 창의 협업 점수\"}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {scoreDate?.data.map((i, key) => (\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n                <td>{i.examCode}</td>\r\n                <td>{i.userName}</td>\r\n                <td>{i.isAttend ? \"참석\" : \"미참석\"}</td>\r\n                <td>{i.evaluationFactor1}</td>\r\n                <td>{i.evaluationFactor2}</td>\r\n                <td>{i.evaluationFactor3}</td>\r\n                <td>{i.evaluationFactor4}</td>\r\n                <td>{i.evaluationFactor5}</td>\r\n                {interView === InterViewCategory.INTERVIEW && (\r\n                  <>\r\n                    <td>{i.evaluationFactor6}</td>\r\n                    <td>{i.evaluationFactor7}</td>\r\n                    <td>{i.evaluationFactor8}</td>\r\n                  </>\r\n                )}\r\n                <td>\r\n                  {i.evaluationFactor1 +\r\n                    i.evaluationFactor2 +\r\n                    i.evaluationFactor3 +\r\n                    i.evaluationFactor4 +\r\n                    i.evaluationFactor5 +\r\n                    (i.evaluationFactor6 !== null ? i.evaluationFactor6 : 0) +\r\n                    (i.evaluationFactor7 !== null ? i.evaluationFactor7 : 0) +\r\n                    (i.evaluationFactor8 !== null ? i.evaluationFactor8 : 0)}\r\n                </td>\r\n                <td>{i.calcScore}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterViewScore;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport InterViewScore from \"components/Admin/InterViewScore\";\r\nimport useStore from \"lib/hooks/useStore\";\r\nimport { InterViewScoreResponse } from \"util/types/Response\";\r\nimport ExcelApi from \"assets/api/ExcelApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InterViewCategory from \"util/enums/InterViewCategory\";\r\nimport { handleAdmin } from \"lib/handleErrors\";\r\n\r\nconst InterViewScoreContainer = ({}) => {\r\n  const { store } = useStore();\r\n  const { getInterviewScore, getTeam } = store.ScoreStore;\r\n  const {\r\n    uploadInterview,\r\n    GetInterviewScoreExcel,\r\n    getTeamNumber,\r\n    uploadTeamNumber,\r\n  } = ExcelApi;\r\n\r\n  const [teamCount, setTeamCount] = useState<number[]>();\r\n  // 팀 수를 저장하는 useState\r\n  const [interView, setInterView] = useState<InterViewCategory>(\r\n    InterViewCategory.COOPERATION\r\n  );\r\n  // 면접 카테고리를 선택하는 useState 기본은 COOPERATION로 선택되있음\r\n  const [team, setTeam] = useState<string>(\"0\");\r\n  // 팀 선택 하는 useState\r\n  const [scoreDate, setScoreDate] = useState<InterViewScoreResponse>();\r\n  // 학생들의 점수를 저장하는 useState\r\n  const history = useHistory();\r\n\r\n  // 팀 번호별 점수를 excel 다운받는 함수 0은 전체 팀 점수를 다운받는다.\r\n  // 전체가 선택되어있으면 team이 0이 되는데 그러면 api를 받을때 undefined를 넘겨준다\r\n  const tryDownExcel = async () => {\r\n    await GetInterviewScoreExcel(\r\n      interView,\r\n      team === \"0\" ? undefined : team\r\n    ).catch((err) => {\r\n      handleAdmin(err, history);\r\n      if (err.response?.status === 404) {\r\n        setTeam(\"0\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // 전체 팀 수를 얻어오는 함수\r\n  // 카테고리마다 팀 수가 달라서 카테고리를 선택해서 넘겨줘야함\r\n  const tryGetTeam = useCallback(async () => {\r\n    setTeam(\"0\");\r\n    await getTeam(interView)\r\n      .then((res) => {\r\n        setTeamCount(res.data);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, [interView]);\r\n\r\n  // 팀 점수 받아오는 함수\r\n  //카테고리와 팀 번호를 넘겨줘야 한다\r\n  // 팀번호가 0이면 undefined가 넘어가서 팀 전체를 조회할 수 있다.\r\n  const tryGetScore = useCallback(async () => {\r\n    await getInterviewScore(interView, team === \"0\" ? undefined : team)\r\n      .then((res) => {\r\n        setScoreDate(res);\r\n      })\r\n      .catch((err) => {\r\n        handleAdmin(err, history);\r\n      });\r\n  }, [interView, team, teamCount, scoreDate]);\r\n\r\n  // 카테고리 선택하는 함수\r\n  // component 보면 select로 되어있는데 거기의 값이 value가 0 또는 1로 되어있다\r\n  const selectInterView = useCallback(\r\n    (index: string) => {\r\n      if (index === \"0\") {\r\n        setInterView(InterViewCategory.COOPERATION);\r\n      } else {\r\n        setInterView(InterViewCategory.INTERVIEW);\r\n      }\r\n    },\r\n    [interView]\r\n  );\r\n\r\n  // 팀 배치 해주는 서식(excel)을 다운받는 함수\r\n  const tryGetNumberTeam = () => {\r\n    getTeamNumber(interView).catch((err) => {\r\n      handleAdmin(err, history);\r\n    });\r\n  };\r\n\r\n  // 팀 수에 맞게 학생을 재배치 한 excel 업로드 하는 함수\r\n  const tyrUploadTeam = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files && e.target.files.length) {\r\n        let file = e.target.files[0];\r\n        uploadTeamNumber(file)\r\n          .then(() => {\r\n            toast.success(\"파일 업로드 되었습니다\");\r\n            tryGetScore();\r\n            tryGetTeam();\r\n          })\r\n          .catch((err) => {\r\n            if (err.response?.status === 400) {\r\n              toast.warning(\"파일을 잘못선택하였습니다\");\r\n            } else if (err.response?.status === 500) {\r\n              toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\r\n            }\r\n          });\r\n      }\r\n    },\r\n    [tryGetScore]\r\n  );\r\n\r\n  // 면접 점수 업로드 하는 함수\r\n  const uploadFile = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (e.target.files && e.target.files.length) {\r\n        let file = e.target.files[0];\r\n        uploadInterview(file)\r\n          .then(() => {\r\n            toast.success(\"파일 업로드 되었습니다\");\r\n            tryGetScore();\r\n          })\r\n          .catch((err) => {\r\n            if (err.response?.status === 400) {\r\n              toast.warning(\"파일을 잘못선택하였습니다\");\r\n            } else if (err.response?.status === 500) {\r\n              toast.error(\"서버 오류입니다. 잠시 후 다시 시도해주세요.\");\r\n            }\r\n          });\r\n      }\r\n    },\r\n    [tryGetScore]\r\n  );\r\n\r\n  useEffect(() => {\r\n    tryGetTeam();\r\n  }, [interView]);\r\n\r\n  useEffect(() => {\r\n    tryGetScore();\r\n  }, [interView, team, teamCount]);\r\n\r\n  return (\r\n    <InterViewScore\r\n      team={team}\r\n      setTeam={setTeam}\r\n      teamCount={teamCount}\r\n      interView={interView}\r\n      selectInterView={selectInterView}\r\n      scoreDate={scoreDate}\r\n      tryDownExcel={tryDownExcel}\r\n      uploadFile={uploadFile}\r\n      tryGetNumberTeam={tryGetNumberTeam}\r\n      tyrUploadTeam={tyrUploadTeam}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(InterViewScoreContainer);\r\n","import React from \"react\";\r\nimport InterViewScoreContainer from \"containers/Admin/InterViewScore/InterViewScoreContainer\";\r\nimport DefaultAdminHeader from \"components/Admin/DefaultAdminHeader\";\r\n\r\nconst SecondTypeScorePage = () => {\r\n  return (\r\n    <DefaultAdminHeader>\r\n      <InterViewScoreContainer />\r\n    </DefaultAdminHeader>\r\n  );\r\n};\r\n\r\nexport default SecondTypeScorePage;\r\n"],"sourceRoot":""}